{"titles":[" Testcontainers With Colima"," Notes on ‚ÄúAvoid These Common Mistakes Junior Developers Make‚Äù"," Docker Desktop Alternatives for macOs"," What All New Software Developers Need to Know"],"content":"Hello üëã! Thanks for subscribing.\n\n\nHere are the articles from last week:\n\n## [Testcontainers With Colima](https://www.rockyourcode.com/testcontainers-with-colima/)\n\nPublished on: 2022-04-09\n\ntags: Java, Kotlin, Testing\n\n\n**[Testcontainers][testcontainers]** is a Java library to support testing database operations with Docker containers.\n\nThe library needs a working Docker context to spin up the containers.\n\nIf you use [Colima/Lima][colima] as a [Docker replacement][replacedocker], you might come across the following error:\n\n```bash\nCould not find a valid Docker environment. Please see logs and check configuration\njava.lang.IllegalStateException: Could not find a valid Docker environment. Please see logs and check configuration\n\tat org.testcontainers.dockerclient.DockerClientProviderStrategy.lambda$getFirstValidStrategy$4(DockerClientProviderStrategy.java)\n```\n\nYou can override the [docker host detection][customize] by providing the following environment variables (in your Bash/Zsh shell):\n\n```bash\nexport TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE=/var/run/docker.sock\nexport DOCKER_HOST=\"unix://${HOME}/.colima/docker.sock\"\n```\n\nFor [Fish](https://fishshell.com/):\n\n```fish\nset -x TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE /var/run/docker.sock\nset -x DOCKER_HOST unix://{$HOME}/.colima/docker.sock\n```\n\nI had to restart IntelliJ to make sure that the program picks up the changed environment.\n\n\n## Links:\n\n- [How to configure Testcontainers to work with Colima as container runtime? #5034][gh]\n- [Testcontainers][testcontainers]\n\n[gh]: https://github.com/testcontainers/testcontainers-java/issues/5034#issuecomment-1036433226\n[customize]: https://www.testcontainers.org/features/configuration/\n[colima]: https://github.com/abiosoft/colima/\n[replacedocker]: https://www.rockyourcode.com/docker-desktop-alternatives-for-macos/\n[testcontainers]: https://www.testcontainers.org/\n\n\n<hr />\n## [Notes on ‚ÄúAvoid These Common Mistakes Junior Developers Make‚Äù](https://www.rockyourcode.com/notes-on-avoid-these-common-mistakes-junior-developers-make/)\n\nPublished on: 2022-03-06\n\ntags: Notes, Lab\n\n\nHere are some notes on [Dave Farley's video on Youtube][you].\n\n[![Avoid These Common Mistakes Junior Developers Make!](https://i.ytimg.com/vi/5g3dK2DgW-k/sddefault.jpg)](https://youtube.com/watch?v=5g3dK2DgW-k \"Avoid These Common Mistakes Junior Developers Make!\")\n\n1. Software Developers Is All About Coding\n\nSoftware development is about solving problems, not about code.\n\n2. If Only the Business Would Get the Requirements Right\n\nThis sentences completely misses the point. It assumes that developers are paid to code, and that someone else will tell them what to do.\n\nNobody really knows what users want. Everyone is guessing. The job of developers is to build systems in a world of uncertainty.\n\nThe goal is to protect against bad guesses and to incrementally evolve solutions to problems, so that we have freedom to make mistakes.\n\n3. Speed Is All That Matters\n\nTake the time to think. Once the problem is clear, the coding is easy.\n\nOptimize for learning, not for feature production\n\n4. My Job Is to Code, Not to Understand the Problem Domain\n\nYou don't have to be a domain expert, but you need to have a surface level understanding. Try to see the real problem in the real world.\n\n5. I Can't Ask for Help. It Shows That I Don't Know Enough.\n\nSmart people ask questions. Get comfortable with uncertainty.\n\nGive yourself the freedom to ask twice. If you have to ask a third time, go to the person answering and explain that you didn't understand it and ask for help.\n\n6. Software Architecture Is for the Experts\n\nYou should be able to explain how the system works. Could you explain it to your (non-technical) friend?\n\nWhat are the organizing principles that really matter?  \nWhat ideas help you to decide where to place behavior in your system?\n\n7. Testing Is Someone Else's Job!\n\nDevelopers should write tests. Developers are responsible for building the system, sothey should be able to test if it works.\n\n8. I Would Like to Do a Better Job, but My Boss Won't Let Me!\n\nThis could be a cultural problem. But at some point, we must take responsibility for our own work.\n\nFocus on the stuff that you can control, and take ownership of it.\n\n## Links\n\n- [Avoid These Common Mistakes Junior Developers Make!][you]\n\n[you]: https://www.youtube.com/watch?v=5g3dK2DgW-k\n\n\n<hr />\n## [Docker Desktop Alternatives for macOs](https://www.rockyourcode.com/docker-desktop-alternatives-for-macos/)\n\nPublished on: 2022-02-06\n\ntags: DevOps, MacOs, Docker, Kubernetes\n\n\nIn this article I will show you two alternatives for [Docker Desktop](https://docs.docker.com/desktop/mac/install/) on macOs.\n\nBut why?\n\nDocker has introduced [new pricing changes to their Docker Desktop utility](https://www.theregister.com/2021/08/31/docker_desktop_no_longer_free/). This doesn't affect small companies or personal projects.\n\nBut the license change has sparked a new [discussion about Docker Desktop alternatives][hn], and I was interested in testing them out.\n\nI settled on the following two tools: **Rancher Desktop** and **Colima**.\n\n## 1. Rancher Desktop\n\n**[Rancher Desktop][rancher]** is an open-source [Electron.js](https://www.electronjs.org/) desktop application. You can install Rancher Desktop on macOs, Windows and Linux.\n\n![rancher desktop architecture](https://rancherdesktop.io/images/how-it-works-rancher-desktop.svg)\n\nInstallation (via [Homebrew](https://brew.sh)):\n\n```bash\nbrew install --cask rancher\n```\n\nYou'll still need the docker command-line tool (CLI).  \nRancher can install it via their GUI (graphical user interface) in the \"Supporting Utilities\" Tab. Alternatively, you can install it separately.\n\n(If you want to use [docker compose v2][compose], you'll need to have it on [your machine](https://github.com/docker/compose#where-to-get-docker-compose) - check the instructions below or read the [Rancher Desktop FAQ][rancherfaq].)\n\n**Stop Docker Desktop**, if you still have it on your machine. (You can have it installed, but you should not start the utility.)\n\nRancher Desktop offers a GUI to install and manage [Kubernetes][k8s]-cluster and container.\n\nYou can choose between [containerd](https://containerd.io/) or [dockerd/Moby](https://docs.docker.com/engine/reference/commandline/dockerd/) as a container runtime.\n\n![Rancher GUI on Mac](https://docs.rancherdesktop.io/assets/images/intro-dda4d7e855cb21ce875e945c97fb7bd0.png)\n\nIf you use containerd, you can manage your containers with [nerdctl](https://github.com/containerd/nerdctl). If you choose dockerd, you can continue using the docker command line tool.\n\nIn that case all well-known docker commands will still work, for example `docker ps`.\n\n## 2. Colima\n\n**[Colima][colima]** is an alternative to Docker Desktop that's solely available as a command-line utility.\n\nUnder the hood Colima uses the [Lima-VM][lima], same as Rancher Desktop.\n\n> Lima launches Linux virtual machines with automatic file sharing and port forwarding (similar to WSL2), and containerd.\n\nInstallation:\n\n```bash\nbrew install colima\n```\n\n**Stop Docker Desktop**, if you still have it on your machine. (You can have it installed, but you should not start the utility.)\n\nYou'll still need the docker command-line tool (CLI).\n\n(If you want to use [docker compose v2][compose], you'll need to install it on [your machine](https://github.com/docker/compose#where-to-get-docker-compose).)\n\nIf you now try to use docker, it won't work:\n\n```bash\ndocker ps\n> Can‚Äôt connect to the Docker daemon at unix:///var/run/docker.sock.\n> Is the docker daemon running?\n```\n\nStart colima:\n\n```bash\ncolima start\n```\n\nYou can [customize](https://github.com/abiosoft/colima/#customization-examples) the virtual machine:\n\n```bash\ncolima start --cpu 2 --memory 8 --disk 10\n```\n\nNow everything should work without problems.\n\nIf you don't want to use Colima anymore, [reset the Docker context](https://github.com/abiosoft/colima/issues/134). Colima overwrites the context in `/Users/<usernane>/.docker/config.json`:\n\n```bash\ndocker context use default\n```\n\n## How to Install Docker and Docker Compose v2\n\nIf you rip out Docker Desktop from your Mac, you'll need to take care of installing the necessary command-line tools.\n\nYou can install docker via Homebrew:\n\n```bash\nbrew install docker\n```\n\nInstall [compose v2][compose].\n\nFor Intel:\n\n```bash\nmkdir -p ~/.docker/cli-plugins/\ncurl -SL https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-darwin-x86_64 -o ~/.docker/cli-plugins/docker-compose\nchmod +x ~/.docker/cli-plugins/docker-compose\n```\n\nFor M1/ARM:\n\n```bash\nmkdir -p ~/.docker/cli-plugins/\ncurl -SL https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-darwin-aarch64 -o ~/.docker/cli-plugins/docker-compose\nchmod +x ~/.docker/cli-plugins/docker-compose\n\n```\n\nCheck if `docker compose` works:\n\n```bash\ndocker compose version\n```\n\n## Credentials Error\n\nYou might get the following error when you try to pull images:\n\n```bash\nError saving credentials: error storing credentials - err: exec: ‚Äúdocker-credential-osxkeychain‚Äù: executable file not found in $PATH, out:\n```\n\nInstall the [docker credentials helper](https://github.com/docker/docker-credential-helpers):\n\n```\nbrew install docker-credential-helper\n```\n\n## Links\n\n- [Lima VM][lima]\n- [Colima][colima]\n- [Rancher Desktop][rancher]\n- [Rancher Desktop documentaion](https://docs.rancherdesktop.io/)\n- [Rancher Desktop FAQ][rancherfaq]\n- [Hacker News \"Docker for Mac Without Docker Desktop\"][hn]\n- [Compose v2][compose]\n- [Goodbye Docker Desktop for Mac, Hello Colima](https://jacobtomlinson.dev/posts/2022/goodbye-docker-desktop-for-mac-hello-colima/) by Jacob Tomlinson\n\n[rancher]: https://rancherdesktop.io/\n[k8s]: https://kubernetes.io/\n[colima]: https://github.com/abiosoft/colima/\n[lima]: https://github.com/lima-vm/lima\n[compose]: https://github.com/docker/compose#linux\n[rancherfaq]: https://docs.rancherdesktop.io/faq\n[hn]: https://news.ycombinator.com/item?id=30116433\n\n\n<hr />\n## [What All New Software Developers Need to Know](https://www.rockyourcode.com/what-all-new-software-developers-need-to-know/)\n\nPublished on: 2021-12-16\n\ntags: Lab, Notes\n\n\nHere are the bulletpoints from the ~ 30 minute video [What All New Software Developers Need To Know][youtube] by Dave Farley.\n\n[![What All New Software Developers Need To Know](https://i.ytimg.com/vi/hjIlTaAMsbI/sddefault.jpg)](https://youtube.com/watch?v=hjIlTaAMsbI 'What All New Software Developers Need To Know')\n\n1. Nobody Knows Everything\n\n   Everyone is a junior in something. It's OK to say \"I don't know\".\n\n2. Apply \"Engineering Thinking\" to Solving Problems\n\n   Learn from your failures.\n\n3. Make Progress in Small Controlled Experiments\n\n   Get comfortable with not knowing. Always work in small steps.\n\n4. Be Suspicious of Your Ideas and Guesses\n\n   Always test your assumptions.\n\n5. Seek Mentors\n\n   Look to chose your own boss. Interview the organization you apply to.\n\n6. Seek Out Pair Programming\n\n7. Find Like Minds\n\n   Go to meetups, find open-source projects to contribute to.\n\n8. Don't Be Obsessed With Tools\n\n   Software development is about understanding the problem we are working on. Develop the skills to analyze problems. Talk to other people, make diagrams.\n\n9. Focus on the Problem You Are Solving\n\n   Your real job is not coding.\n\n10. Write Lots of Code - Play With It\n\n    Explore. Try coding exercises.\n\n11. It's About Thinking, Not Typing!\n\n    Learn the fundamentals and apply them. Learn test-driven-development.\n\n12. Fundamentals Are More Important Than Tools\n\n    Tools come and go, but the fundamentals stay.\n\n13. Language & Frameworks Should Be Incidental\n\n    Spend some time to learn them, but look for the deeper, profound skills.\n\n14. Solving Problems > Design > Coding > Language & Frameworks\n\n15. TDD Focus Maintain Focus on the Problem & Improves Design Quality\n\n16. Take Coupling/Dependencies Seriously\n\n17. Concurrency Requires Caution\n\n18. Optimise for Learning & Discovery\n\n19. Work Iteratively\n\n    Gather feedback.\n\n20. Work Incrementally\n\n    Make progress as a series of experiments.\n\n21. Be Empirical\n\n    Observe. Evaluate ideas in the real world.\n\n22. Optimise to Manage Complexity\n\n    Create modular systems. Improve cohesion. Separation of concerns. Manage Coupling. Use abstractions.\n\n## Source\n\n- [What All New Software Developers Need To Know][youtube] by Dave Farley\n\n[youtube]: https://www.youtube.com/watch?v=hjIlTaAMsbI\n\n\n<hr />\n\nThank you for reading my blog.\n\nDon't hesitate to reach out via [email](mailto:hi@rockyourcode.com\") or [Twitter](https://twitter.com/hisophiabrandt)!\n"}