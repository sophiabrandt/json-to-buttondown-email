{"titles":[" Notes on ‚ÄúRxJS Recipes ‚Äì Dominic Elm & Kwinten Pisman ‚Äì Uphill Conf 2019‚Äù"," Tailwind CSS With Tailwind CLI"," Notes on ‚ÄúHow to Learn Anything 5x Faster (Joe Eames)‚Äù"," Notes on ‚ÄúDOM Angular Manipulation Techniques in Depth‚Äù by Nir Kaufman"],"content":"Hello üëã! Thanks for subscribing.\n\n\nHere are the articles from last week:\n\n## [Notes on ‚ÄúRxJS Recipes ‚Äì Dominic Elm & Kwinten Pisman ‚Äì Uphill Conf 2019‚Äù](https://www.rockyourcode.com/notes-on-rxjs-recipes-from-uphill-conf-2019/)\n\nPublished on: 2021-12-05\n\ntags: RxJS, JavaScript\n\n\nHere are some notes on the [talk on RxJS Recipes][youtube] by Dominic Elm and Kwinten Pisman.\n\n[![Dominic Elm & Kwinten Pisman - RxJS Recipes - Uphill Conf 2019](https://i.ytimg.com/vi/W8T3eqUEOSI/sddefault.jpg)](https://youtube.com/watch?v=W8T3eqUEOSI 'Dominic Elm & Kwinten Pisman - RxJS Recipes - Uphill Conf 2019')\n\n## Identifying Patterns\n\n- What?: Result\n- When?: Trigger\n- How?: Pattern\n\nTriggers and results should _always_ be streams. If they are not streams, create streams yourself.\n\n## Repeater Pattern\n\nWork that needs to be executed n times (n > 1)\n\n```ts\nconst result$ = trigger$.pipe(<flatteningOperator>((_) => work$))\n```\n\n## Enricher\n\nLazily enrich a stream with data when trigger fires\n\n```ts\nconst result$ = trigger$.pipe(\n\twithLatestFrom(enricherSource$),\n\tmap(([trigger, data]) => <data>),\n);\n```\n\n## Group Aggregator\n\nWhenever the result is an Observable<boolean>\n\n```ts\nconst FT$ = falseTrigger$.pipe(mapTo(false))\nconst TT$ = falseTrigger$.pipe(mapTo(true))\n\nconst result$ = merge(FT$, TT$)\n```\n\n_(Note: Using [merge](https://rxjs.dev/api/operators/merge) is deprecated, use [mergeWith](https://rxjs.dev/api/operators/mergeWith) instead.)_\n\n## Work Decider\n\nWork that needs to be stopped and restarted when some trigger fires\n\n```ts\nconst result$ = trigger$.pipe(<flatteningOperator>((condition) => {\n  if (condition) workA$\n  else workB$\n}))\n```\n\nUse observables as the boundaries between services and components.\n\n## Error Decider\n\nWork that needs to be stopped and restarted when some trigger fires\n\n```ts\nconst result$ = trigger$.pipe(\n  retryWhen((error$) => {\n    return error$.pipe(\n      switchMap((_) => {\n        if (condition) workA$\n        else workB$\n      })\n    )\n  })\n)\n```\n\n## Links\n\n- [Dominic Elm & Kwinten Pisman - RxJS Recipes - Uphill Conf 2019][youtube]\n- [Slides from the talk](https://speakerdeck.com/kwintenp/rxjs-recipes)\n- [Code Repository](https://github.com/KwintenP/rxjs-recipes-talk)\n\n[youtube]: https://youtube.com/watch?v=W8T3eqUEOSI\n\n\n<hr />\n## [Tailwind CSS With Tailwind CLI](https://www.rockyourcode.com/tailwind-css-with-tailwind-cli/)\n\nPublished on: 2021-11-29\n\ntags: CSS, Node.js\n\n\n> How to install Tailwind CSS without a front-end framework\n\nHere's my cheat sheet to Tailwind CSS with [PostCSS][postcss] and [CSSNano][cssnano]. The guide follows the official [documentation][docs] with a few modifications.\n\n## Installation\n\nYou'll need a recent version of [Node.js](https://nodejs.org/en/).\n\n```bash\nnpm install -D tailwindcss@latest postcss@latest \\\n\tautoprefixer@latest cssnano\n```\n\n## PostCSS Configuration\n\nCreate a file `postcss.config.js`:\n\n```js\nconst cssnano = require('cssnano')\nconst tailwindcss = require('tailwindcss')\nconst autoprefixer = require('autoprefixer')\n\nconst plugins =\n  process.env.NODE_ENV === 'production'\n    ? [tailwindcss, autoprefixer, cssnano]\n    : [tailwindcss, autoprefixer]\n\nmodule.exports = { plugins }\n```\n\n## Tailwind Configuration\n\nCreate a file `tailwind.config.js`:\n\n```js\nmodule.exports = {\n  mode: 'jit',\n  purge: ['**/*.html'],\n  darkMode: false,\n  theme: {\n    extend: {},\n  },\n  variants: {\n    extend: {},\n  },\n  plugins: [],\n}\n```\n\n**Important**: Adjust the `purge` option to your use case.  \nI copy/pasted the configuration from somewhere else and Tailwind didn't work properly for me.\n\n## Use Tailwind CLI\n\n### 1. Without Customization\n\n```bash\nnpx tailwindcss --postcss \\\n\t-o <name and location of your css file>.css\n```\n\nReference the compiled CSS file in your HTML:\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <!-- ... -->\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link href=\"/main.css\" rel=\"stylesheet\" />\n  </head>\n  <body>\n    <!-- ... -->\n  </body>\n</html>\n```\n\n### 2. With Customization\n\nCreate a stylesheet and add the required utility classes:\n\n```css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* add any custom styles here */\n```\n\n```bash\nnpx tailwindcss --postcss \\\n\t-i <above stylesheet location>.css \\\n\t-o <name and location of your css file>.css\n```\n\n## Links\n\n- [Tailwind Installation][docs]\n- [Using Tailwind CSS in production](https://blog.logrocket.com/using-tailwind-css-in-production/)\n\n[docs]: https://tailwindcss.com/docs/installation\n[cssnano]: https://cssnano.co/\n[postcss]: https://postcss.org/\n\n\n<hr />\n## [Notes on ‚ÄúHow to Learn Anything 5x Faster (Joe Eames)‚Äù](https://www.rockyourcode.com/notes-on-how-to-learn-anything-5x-faster/)\n\nPublished on: 2021-11-27\n\ntags: Lab\n\n\nThese are my notes on the video [How to Learn Anything 5X Faster | ng-conf & Thinkster.io | #ngconf][howto] by Joe Eames from thinkster.io.\n\n[![How to Learn Anything 5X Faster | ng-conf & Thinkster.io | #ngconf](https://i.ytimg.com/vi/SNbT1vquB6k/sddefault.jpg)](https://youtube.com/watch?v=SNbT1vquB6k 'How to Learn Anything 5X Faster | ng-conf & Thinkster.io | #ngconf')\n\n## Concepts\n\n- education is a process: many steps\n- content today provides only 1 step (Udemy, Pluralsight, blogs, books)\n- you have to do the rest\n- **retention is KEY**: what matters is what you know tomorrow, not what you know today\n- **motivation**: current process is demotivating, as it's ineffective\n- passive learning: retention of 7 - 15%\n- active learning: retention of 75 - 90%\n- teaching: 90+%\n- **typing is not coding**: mechanical tasks (like typing) even hinder the learning process\n- missing piece of education: **generation**\n\n## Role of Teachers\n\n- tutoring/coaching\n- teach\n- _assign proper exercises_\n\n## Building Knowledge\n\n- like a building\n- foundation\n- build a framework upon the foundation\n- details\n\n## Effective Learning Plan\n\n1. consume the content\n   - watch content max. 10 minutes\n   - take notes (writing down helps processing)\n2. practice\n3. take breaks\n4. personal project\n5. spaced repetition\n\n## tips\n\n- get a \"map\"/overview\n- strategize your learning\n\n## Links\n\n- [How to Learn Anything 5X Faster | ng-conf & Thinkster.io | #ngconf][howto]\n\n[howto]: https://www.youtube.com/watch?v=SNbT1vquB6k\n\n\n<hr />\n## [Notes on ‚ÄúDOM Angular Manipulation Techniques in Depth‚Äù by Nir Kaufman](https://www.rockyourcode.com/notes-on-angular-dom-manipulation-techniques-in-depth/)\n\nPublished on: 2021-11-23\n\ntags: Angular\n\n\nMinimal notes from [Nir Kaufman](https://nir.life)'s talk.\n\n[![Nir Kaufman - Angular DOM Manipulation Techniques in Dept | JS VidCon](https://i.ytimg.com/vi/5AWh6Qhp-7s/sddefault.jpg)](https://youtube.com/watch?v=5AWh6Qhp-7s 'Nir Kaufman - Angular DOM Manipulation Techniques in Dept | JS VidCon')\n\n## There Is No DOM\n\n- Angular provides an abstraction on the DOM\n- creates a \"View\" object from a (TypeScript) class and a template file\n- **Embedded views** are linked to a template\n- **Host views** are linked to a component\n- Angular creates a **view hierarchy**: the DOM hierarchy can be different!\n\n## View Manipulation\n\n- **Structure manipulation**: `ViewContainer` API\n- **Property modification**: `Renderer2` API\n\n## Links\n\n- [Angular Portal GitHub repository](https://github.com/nirkaufman/teleport)\n- [Nir Kaufman - Angular DOM Manipulation Techniques in Dept | JS VidCon](https://www.youtube.com/watch?v=5AWh6Qhp-7s)\n\n\n<hr />\n\nThank you for reading my blog.\n\nDon't hesitate to reach out via [email](mailto:hi@rockyourcode.com\") or [Twitter](https://twitter.com/hisophiabrandt)!\n"}