{"titles":[" I'm Taking a Break"," TIL: How to Fix ‚ÄùCannot Read Termcap Database‚Äù With Tmux and Kitty on Macos"," Notes on ‚ÄúHashnode Talks: Saas, Software Engineering and Social Media With Simon H√∏iberg‚Äú"," I Started My New Job (And Have MacOS Woes)"," TIL: How to Remove Headers From ps Command on MacOs"," How to Build Any Kind of App by Andrea Bizzotto"," How I Remove Duplicate Lines From a File With awk"],"content":"Hello üëã! Thanks for subscribing.\n\n\nHere are the articles from last week:\n\n## [I'm Taking a Break](https://www.rockyourcode.com/im-taking-a-break/)\nPublished on: 2021-07-10\n\ntags: Lab, this_blog, Writing\n\n\nI'm taking a break from [daily blogging](https://www.rockyourcode.com/experiment-100-days-of-blogging).\n\nI've started my first job in tech as a full-time software developer on July 1st.  \nBefore that, I was employed as a tax officer where I chose to work part-time.\n\nThe transition to full-time work and a totally different industry doesn't leave me enough energy to work on my side-projects or to write blog articles.\n\nFor now, I will concentrate on getting up to speed in my day job.\n\n\n<hr />\n## [TIL: How to Fix ‚ÄùCannot Read Termcap Database‚Äù With Tmux and Kitty on Macos](https://www.rockyourcode.com/til-how-to-fix-cannot-read-termcap-database-with-tmux-and-kitty-on-macos/)\nPublished on: 2021-07-03\n\ntags: TIL, MacOs, Tmux, DevTools\n\n\n## The Problem\n\nI use the [Kitty terminal emulator][kitty] with [Tmux][tmux] as my main tool for working with code.\n\nMy Tmux settings (`~/.tmux.conf`) contain the following lines to enable **true-color-support**:\n\n```\n# true colors\nset -g terminal-overrides ',xterm-256color:Tc'\nset -g default-terminal \"tmux-256color\"\nset -as terminal-overrides ',xterm*:sitm=\\E[3m'\n```\n\nWhen I open tmux on MacOs I get the following error message:\n\n```bash\nCannot read termcap database;\nusing dumb terminal settings.\n```\n\n## The Solution\n\n[Solution as a GitHub Gist][gist]:\n\n> macOS has ncurses version 5.7 which does not ship the terminfo description for tmux.\n\nDownload `terminfo` provided by the tmux maintainers:\n```bash\ncurl -sSL https://gist.github.com/nicm/ea9cf3c93f22e0246ec858122d9abea1 > tmux-256color\n```\n\nCompile `tmux-256color` terminal info:\n```bash\n/usr/bin/tic -xe tmux-256color terminfo.src\n```\n\nVerify that `terminfo` returns the correct value (it should _not_ be `null`):\n```bash\ninfocmp -x tmux-256color\n```\n\n## Links\n\n- [Installing tmux-256color for macOS][gist]\n- [Setting up True Color Support for Neovim and Tmux on Mac][jdhao]\n\n\n[jdhao]: https://jdhao.github.io/2018/10/19/tmux_nvim_true_color/\n[gist]: https://gist.github.com/bbqtd/a4ac060d6f6b9ea6fe3aabe735aa9d95\n[kitty]: https://github.com/kovidgoyal/kitty  \n[tmux]: https://github.com/tmux/tmux\n\n\n<hr />\n## [Notes on ‚ÄúHashnode Talks: Saas, Software Engineering and Social Media With Simon H√∏iberg‚Äú](https://www.rockyourcode.com/notes-on-saas-software-engineering-and-social-media-with-simon-hoiberg/)\nPublished on: 2021-07-02\n\ntags: Lab, Notes\n\n\nSimon started his career in selling software. As he learned more about the world of software, he gradually transformed into a software developer and freelance consultant.\n\nSimon build a [SaaS](https://en.wikipedia.org/wiki/Software_as_a_service) product last year. Here is what he learned from trying to build an audience:\n\n[![Hashnode Talks With Simon H√∏iberg - SaaS, Software Engineering and Social Media](https://i.ytimg.com/vi/hwdhS50wavU/sddefault.jpg)](https://youtube.com/watch?v=hwdhS50wavU \"Hashnode Talks With Simon H√∏iberg - SaaS, Software Engineering and Social Media\")\n\n## About Building an Audience\n\nHe spend a month on trying to **understand his audience without trying to sell anything**. His focus was on **being helpful** and consistently offering help.  \nHe's giving away 90% of his content for free, and asks for money far down the road.\n\nThe first 500 followers are the hardest. Social proof helps you as soon as you overcome the initial bump.\n\nSimon's top tips for starters:\n\n- provide _actionable_ value\n- don't ask for anything in return\n- post content consistently\n- focus 75% of your effort on engaging with your audience\n- follow big social media accounts, and provide value there without copying the content, show respect\n\nThere will be haters on social media. Don't feed the trolls. Prepare for the critics.\n\n## About Building a SaaS Business\n\nSimon build the tool that he wanted to see (scheduling social media posts). He build a small open-source application first.\n\nHe build a MVP and found people interested in the product via Twitter. Then he constantly sought feedback and improved the product.\n\nHe's now bootstrapping the business. As a founder, you might need to dog-food the business, as it might not be profitable yet.\n\nOn social media, you'll see a lot of success stories. But often you don't see the hard work that happened before the \"overnight success\".\n\n## Links\n\n- [Hashnode Talks With Simon H√∏iberg - SaaS, Software Engineering and Social Media][youtube]\n\n[youtube]: https://www.youtube.com/watch?v=hwdhS50wavU\n\n\n<hr />\n## [I Started My New Job (And Have MacOS Woes)](https://www.rockyourcode.com/i-started-my-new-job/)\nPublished on: 2021-07-01\n\ntags: Lab, Unix, MacOs\n\n\nToday I started my first job in tech.\n\nWhile I'm pretty excited, it's a big step.\n\nI have to learn new workflows and tools (Jira) and become familiar with a new code-base (Angular nx workspace).\n\nPlus, I now have a Mac for work. I underestimated the differences between my Linux box and MacOs.\n\nAs terminal user with lots of scripts and shell modifications, I heavily rely on my [dotfiles](https://github.com/sophiabrandt/dotfiles).\n\nI came to the realization that my files are not as portable as I've thought.\n\nCurrently, my problem is that the Linux `$HOME` folder is `/home/username` while MacOs uses `/Users/username`.\n\nThe fish shell seems unable to expand the `$HOME` variable. It uses the absolute path, which is not portable to MacOS, as the `$HOME` directory is at a different location.\n\nExample output of `echo $fish_user_paths | tr \" \" \"\\n\" | nl` (shows the [`PATH` variables](https://fishshell.com/docs/current/cmds/fish_add_path.html)):\n\n```bash\n1 /home/myusername/.bin\n2 /home/myusername/.deno/bin\n```\n\nFor Mac it need to be:\n\n```bash\n1 /Users/myusername/.bin\n2 /Users/myusername/.deno/bin\n```\n\nMy idea was to replace all hard-coded values with the `$HOME` variable.\n\n```bash\n1 $HOME/.bin\n2 $HOME/.deno/bin\n```\n\n**This does not work with Fish shell**.\n\nI haven't found a solution yet.\n\n_Edit:_ I've created a symbolic link for `/Users/myusername` to `/home/myusername`.\n\n```bash\nsudo vim /etc/auto_master\n# add a \"#\" at the start of the line beginning with /home\n# save changes\nsudo automount -cv\nsudo ln -s /Users/myusername /home/myusername\n```\n\nI've found this solution on [StackExchange](https://apple.stackexchange.com/questions/44058/mac-os-x-how-to-symlink-home-to-users).\n\n\n<hr />\n## [TIL: How to Remove Headers From ps Command on MacOs](https://www.rockyourcode.com/til-how-to-remove-headers-from-ps-command-on-macos/)\nPublished on: 2021-06-30\n\ntags: TIL, Unix, MacOs\n\n\nToday I've started to setup my MacBook Pro for work. It's my first Mac and I'm not amused.\n\nIf you only know Linux, there are some pitfalls.\n\nMy `.bashrc` script contains the following lines:\n\n```bash\n#\n# ~/.bashrc\n#\n# Fish\nif [[ $(ps --no-header --pid=$PPID --format=cmd) != \"fish\" ]]\nthen\n  exec fish\nfi\n```\n\nI use `bash` as my login shell, but `fish` as my main interactive shell. Fish is not POSIX-compliant which can lead to problems.\n\n> This will allow Bash to properly source `/etc/profile` and all files in `/etc/profile.d`. Because fish replaces the Bash process, exiting fish will also exit the terminal. Compared to the following options, this is the most universal solution, since it works both on a local machine and on a SSH server.\n\nThe command starts a shell inside `bash`, but drops into `fish`. When you use the `fish` shell, but want to bail out to `bash`, you can type `bash` into the prompt.\n\nUnfortunately, the command relies on the GNU implementation of `ps --no-headers`. MacOs ships with the BSD variant of `ps`.\n\nWorkaround:\n\n```bash\nif [[ $(ps -p $PPID -o command | tail -n +2) != \"fish\" ]]\nthen\n  exec fish\nfi\n```\n\nNow we use the `-o` option:\n\n>  -o    \n>  Display information associated with the space or comma sepa-\\\n         rated list of keywords specified.  Multiple keywords may also\\\n         be given in the form of more than one -o option.  Keywords may\\\n         be appended with an equals (`=') sign and a string.  This\\\n         causes the printed header to use the specified string instead\\\n         of the standard header.  If all keywords have empty header\\\n         texts, no header line is written.\n\n## Links\n\n- [How to get rid of the headers in a ps command in Mac OS X ?][so]\n- [Setting fish as interactive shell only][arch]\n\n[arch]: https://wiki.archlinux.org/title/Fish#Modify_.bashrc_to_drop_into_fish\n[so]: https://stackoverflow.com/questions/11532188/how-to-get-rid-of-the-headers-in-a-ps-command-in-mac-os-x\n\n\n<hr />\n## [How to Build Any Kind of App by Andrea Bizzotto](https://www.rockyourcode.com/how-to-build-any-kind-of-app-by-andrea-bizzotto/)\nPublished on: 2021-06-29\n\ntags: Lab, Notes\n\n\nHere are some quick notes on the video **[How to build any kind of app in Flutter (and overcome Tutorial Hell)][youtube]** by Andrea Bizzotto.\n\nLearn **solid fundamentals** first.\n\nTry to pinpoint the most challenging features. Read the **documentation** and create a mental map of the features you need.\n\nBuild one feature at a time.\n\nFind tutorials and examples for a feature, experiment with the code, re-assemble it.\n\n_Instead of searching for more tutorials_, improve the existing solution with what you learned from the documentation.\n\nEvery app is different, and you will always encounter things you don't know. Don't focus on \"how to build app X\".\n\n**Focus on the fundamental techniques and design patterns** for building (mobile) apps.\n\nDon't copy-paste code, ask yourself:\n\n- is this answer a good match?\n- does it fit well in my code?\n- do I need to tweak/rewrite this code?\n- will it work for all edge cases?\n- do I understand this code completely?\n\n**Aim for deeper knowledge.**\n\n## Links\n\n- [How to build any kind of app in Flutter (and overcome Tutorial Hell)][youtube] by Andrea Bizzotto\n- [Written guide to above video](https://codewithandrea.com/videos/how-to-build-any-app-flutter/)\n\n[youtube]: https://www.youtube.com/watch?v=sI6wOj8me_I\n\n\n<hr />\n## [How I Remove Duplicate Lines From a File With awk](https://www.rockyourcode.com/how-i-remove-duplicate-lines-from-a-file-with-awk/)\nPublished on: 2021-06-28\n\ntags: TIL, Unix, Shell\n\n\nOne of the repositories I maintain is a beginner's GitHub repo. New developers can make their first pull request by adding their GitHub handle to a simple text file.\n\nWhen pull requests get merged into the master branch, they often contain duplicates. The file has more than 7,000 lines. Names are not sorted alphabetically.\n\nI needed a simple way to remove all duplicates lines from the file without sorting the lines.\n\nI'm using [`awk`][awk], a Unix shell program. I'm not proficient in using `awk`, but I've found useful one-liners that do what I want.\n\n\nFor reference, this is how my file _should_ look like:\n```\n# CONTRIBUTORS\n\n- [@RupamG](https://github.com/RupamG)\n\n- [@hariharen9](https://github.com/hariharen9)\n\n- [@clevermiraz](https://github.com/clevermiraz)\n\n- [@smeubank](https://github.com/smeubank)\n\n- [@LJones95](https://github.com/LJones95)\n\n- [@shannon-nz](https://github.com/shannon-nz)\n\n- [@sammiepls](https://github.com/sammiepls)\n\n```\n\nHere's how it often looks like:\n```\n# CONTRIBUTORS\n\n- [@RupamG](https://github.com/RupamG)\n\n- [@hariharen9](https://github.com/hariharen9)\n\n- [@clevermiraz](https://github.com/clevermiraz)\n\n- [@smeubank](https://github.com/smeubank)\n\n- [@LJones95](https://github.com/LJones95)\n- [@hariharen9](https://github.com/hariharen9)\n\n- [@shannon-nz](https://github.com/shannon-nz)\n\n- [@sammiepls](https://github.com/sammiepls)\n- [@shannon-nz](https://github.com/shannon-nz)\n```\n\n### 1. Remove all empty lines\n\n```bash\nawk 'NF > 0' file.txt\n```\n`NF` is the [Number of Fields Variable](https://www.grymoire.com/Unix/Awk.html#toc-uh-17).\n\n### 2. Remove duplicates\n\n```bash\nawk '!seen[$0]++' file.txt\n```\n\nI stole this command from [opensource.com](https://opensource.com/article/19/10/remove-duplicate-lines-files-awk), where you can find an explanation on how it works.\n\n### 3. Add Empty Lines Again\n\n```bash\nawk '{print; print \"\";}' file.txt\n```\nSee [Stackexchange](https://unix.stackexchange.com/questions/23545/insert-a-new-line-after-every-n-lines).\n\n## Links\n\n- [awk][awk]\n- [The GNU Awk User‚Äôs Guide][gnu]\n- [Awk tutorial][grymoire]\n\n[awk]: https://en.wikipedia.org/wiki/AWK\n[gnu]: https://www.gnu.org/software/gawk/manual/gawk.html\n[grymoire]: https://www.grymoire.com/Unix/Awk.html\n\n\n<hr />\n\nThank you for reading my blog.\n\nDon't hesitate to reach out via [email](mailto:hi@rockyourcode.com\") or [Twitter](https://twitter.com/hisophiabrandt)!\n"}