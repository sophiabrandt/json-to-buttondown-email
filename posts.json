{"titles":[" Fake Webcam Background for Arch Linux With Docker (Using akvcam)"],"content":"Hello ðŸ‘‹! Thanks for subscribing.\n\n## [Fake Webcam Background for Arch Linux With Docker (Using akvcam)](https://www.rockyourcode.com/fake-webcam-background-for-arch-linux-with-docker/})\nPublished on: 2021-05-03\n\ntags: Unix, Docker\n\n\n> Fake virtual backgrounds for your online meeting on Linux\n\nI've been attending a lot of video conference calls lately â€” like so many of us.  \nOthers had nice-looking virtual backgrounds. But there was no option to create those backgrounds on my Linux machine.\n\nFor example, the Zoom version for Linux only allows me to \"touch up my appearance\". But there is no option to set a virtual background.\n\nLuckily, I am not the only one with this problem.\n\nIn this blog post I'll show you how to create a fake virtual background for your web cam using Docker (docker-compose) and akvcam.\n\nUsing this setup, you can use fake backgrounds with Google Chrome (e.g., Jitsi) or stand-alone applications like Zoom.\n\nThis article mirrors the Github repository for [Linux-Fake-Background-Webcam][lfbw]. Some steps from the README were unclear to me. That's why I listed the steps here.\n\nIn this article, we will do the following:\n\n1. Create a virtual camera\n2. Setup Docker-Compose to use the virtual camera\n3. Use the fake virtual background with Zoom or Chromium-based browsers\n\n## Install akvcam & Linux-Fake-Background-Webcam\n\n**[akvcam][akvcam]** is a virtual camera driver for Linux.\n\n1. On Arch Linux/Manjaro Linux, install akvcam with [yay](https://aur.archlinux.org/packages/yay/) or a different AUR helper:\n\n    ```bash\n    yay -S akvcam-dkms\n    ```\n\n    It seems that no pre-build images are available for Ubuntu, so you'll need to follow the [akvcam wiki](https://github.com/webcamoid/akvcam/wiki/Build-and-install).\n\n    We need a driver to create a virtual camera.  \n    I prefer akvcam over the [v4l2loopback-dkms](https://github.com/umlaeute/v4l2loopback) driver as it works with Chrome/Chromium, too.  \n    akvcam works with browser-based video conferencing software like Jitsi or Wonder.me.\n\n2. Clone the [Linux-Fake-Background-Webcam][lfbw] repository to your local machine.\n\n    Example commands using the terminal:\n\n    ```bash\n    git clone https://github.com/fangfufu/Linux-Fake-Background-Webcam.git\n    cd Linux-Fake-Background-Webcam\n    ```\n\n3. Create a virtual camera.\n\n    Check for known video ports before loading the akvcam driver:\n\n    ```bash\n    ls /dev/video*\n    ```\n\n    Configure and load the driver:\n    ```bash\n    sudo cp -r fakecam/akvcam /etc/\n    sudo modprobe videodev\n    ```\n\n    You should now see additional video ports:\n\n    ```bash\n    ls /dev/video*\n    ```\n    \n    Alternative command with example output:\n    ```bash\n    v4l2-ctl --list-devices\n    >\n    akvcam (out) (platform:akvcam-2): /dev/video2\n    akvcam (platform:akvcam-3): /dev/video3\n\n    HD User Facing: HD User Facing (usb-0000:00:14.0-5):\n\t/dev/video0\n\t/dev/video1\n\t/dev/media0\n    ```\n\n    The virtual camera is available as `/dev/video2` output.  \n    `dev/video0`, `dev/video1` and `dev/media0` are the hardware ports.\n\n3. Docker and Docker-Compose Setup\n\n    The repository has an example `docker-compose.yml` file that uses the v4l2loopback driver. We can fix that manually.\n\n    First, copy the environment file:\n\n    ```bash\n    cp docker_defaults.env .env\n    ```\n\n    You can change user settings in the `.env` file.  \n    For example, I downloaded a living room image from [unsplash](https://unsplash.com/) and copied it to the `fakecam` folder as `fake-living-room.jpg`.\n\n    Example settings in `.env`:\n    ```\n    # change images using a volume mapping\n    IMAGE_BACKGROUND=./fakecam/fake-living-room.jpg\n    ```\n\n    Adjust `docker-compose.yml`. We need to adjust the `command` section for the `fakecam` service (at the end of the file):\n    ```yaml\n        # command: [\"--bodypix-url\", \"http://bodypix:9000/\",\n        #           \"-b\", \"background-custom\", \"-f\", \"foreground-custom\" , \"-m\", \"foreground-mask-custom\",\n        #           \"--webcam-path\", \"/dev/video0\", \"--v4l2loopback-path\", \"/dev/video2\"]\n        command: [\"--bodypix-url\", \"http://bodypix:9000/\",\n                  \"-b\", \"background-custom\",\n                  \"--webcam-path\", \"/dev/video0\", \"--akvcam\"]\n    ```\n    The changes instruct Docker to use the akvcam driver and removes the foreground image. If you want to use the image (a fake podium), you can keep that part from the original command.\n\n    The hardware camera uses `/dev/video0` as input. If your hardware port is different, don't forget to change it!\n\n    Adjust the Dockerfile in `fakecam/Dockerfile`. I removed the images as we load them via docker-compose:\n\n    ```Docker\n    FROM python:3.8\n\n    RUN apt-get update && \\\n        apt-get install -y --no-install-recommends \\\n          python3-numpy \\\n          python3-opencv \\\n          python3-requests \\\n          && rm -rf /var/cache/apt/* /var/lib/apt/lists/*\n\n    WORKDIR /src\n\n    COPY fake.py \\\n        akvcam.py \\\n        requirements.txt \\\n        /src/\n\n    RUN pip3 install --no-cache-dir -r requirements.txt\n\n    ENTRYPOINT [\"python3\", \"-u\", \"fake.py\"]\n    CMD [\"--bodypix-url\", \"http://bodypix:9000/\"]\n    ```\n\n5. Run the service with docker-compose:\n\n    ```bash\n    docker-compose up --build\n    ```\n    Or, if you want to run the service in the background:\n    ```bash\n    docker-compose up --build -d\n    ```\n\n6. Use the virtual camera.\n\n    You can now open a video conferencing application and select `akvcam` as your video device.\n\n## Links\n\n- [Linux-Fake-Background-Webcam][lfbw]\n\n[akvcam]: https://github.com/webcamoid/akvcam\n[lfbw]: https://github.com/fangfufu/Linux-Fake-Background-Webcam\n\n\n<hr />\nThank you for reading my blog posts.\n\nDon't hesitate to reach out via [email](mailto:hi@rockyourcode.com\") or [Twitter](https://twitter.com/hisophiabrandt)!\n"}