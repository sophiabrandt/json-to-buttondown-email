{"titles":[" ‚ÄúHow to Think‚Äù by Andr√© Staltz ‚Äì Uphill Conf 2019"," TIL: Angular Configuration Detected Running in Production Mode"," Notes on ‚ÄúRxJS Recipes ‚Äì Dominic Elm & Kwinten Pisman ‚Äì Uphill Conf 2019‚Äù"," Tailwind CSS With Tailwind CLI"],"content":"Hello üëã! Thanks for subscribing.\n\n\nHere are the articles from last week:\n\n## [‚ÄúHow to Think‚Äù by Andr√© Staltz ‚Äì Uphill Conf 2019](https://www.rockyourcode.com/how-to-think-by-andre-staltz-uphill-conf-2019/)\n\nPublished on: 2021-12-12\n\ntags: Lab, Notes\n\n\nHere are short bullet points on the talk [How to Think][you].\n\n[![Andr√© Staltz - How to Think - Uphill Conf 2019](https://i.ytimg.com/vi/_fB8GRotdrc/sddefault.jpg)](https://youtube.com/watch?v=_fB8GRotdrc 'Andr√© Staltz - How to Think - Uphill Conf 2019')\n\n- mind map as a data structure\n- thinking as an algorithm\n- **have a structure for your thoughts**\n- humans imitate each other\n- humans have limited working memory\n- avoid blindly imitating each other, give new ideas at least 10 seconds to think about\n- acknowledge your feelings\n- improve your memory with tools (put your thoughts on paper)\n- debugging = investigating\n- deduction\n- git bisect\n- induction: make a good guess\n- backtracking: question everything\n- brainstorming\n- documentation: code that instruct humans\n- **think slowly and methodically**\n- be aware of your biases, feelings, and limitations\n- specialize, but keep learning\n\n## Links\n\n- [Andr√© Staltz - How to Think - Uphill Conf 2019][you]\n\n[you]: https://www.youtube.com/watch?v=_fB8GRotdrc\n\n\n<hr />\n## [TIL: Angular Configuration Detected Running in Production Mode](https://www.rockyourcode.com/til-angular-configuration-detected-running-in-production-mode/)\n\nPublished on: 2021-12-08\n\ntags: Angular, TIL\n\n\n> How to fix development mode for Angular\n\n## The Problem\n\nMy Angular 12 application was quite slow when I started it with `ng serve`. When I open the [Angular DevTools][devtools] I get the error:\n\n> We detected an application built with production configuration. Angular DevTools only supports development builds.\n\n## The Solution\n\nYou'll need an extra configuration for the development build if your `angular.json` doesn't have it. That's the case if you migrated from an earlier Angular version to v12 or later.\n\nAdjust `angular.json`:\n\nAdd the development options in the `architect` section under `configurations`:\n\nI disabled all optimizations for the development mode, but you can fine-tune them if you like. See the [documentation][optconfig] for details.\n\nYou'll also need a `browserTarget` for your configuration:\n```js\n\n{\n// previous configuration\n  \"projects\": {\n    \"your-project-name\": {\n\t// some options\n      \"architect\": {\n        \"build\": {\n          \"builder\": \"@angular-devkit/build-angular:browser\",\n          \"options\": {\n\t\t  // options outcommented\n          },\n\t\t  /* add the development configuration with disabled\n\t\t  optimizations */\n          \"configurations\": {\n            \"development\": {\n              \"optimization\": false\n            },\n            \"production\": {\n\t\t\t// production options\n            }\n          }\n        },\n        \"serve\": {\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\n          \"options\": {\n            \"browserTarget\": \"your-project-name:build\"\n          },\n          \"configurations\": {\n            \"production\": {\n              \"browserTarget\": \"your-project-name:build:production\"\n            },\n\t\t\t/* add a new development configuration\n\t\t\twith a `browserTarget` */\n            \"development\": {\n              \"browserTarget\": \"your-project-name:build:development\"\n            }\n          },\n\t\t  /* add the development mode\n\t\t  as default configuration */\n          \"defaultConfiguration\": \"development\"\n        },\n      }\n    }\n  },\n  \"defaultProject\": \"your-project-name\"\n}\n```\n\nThat should do the trick.\n\n## Links\n\n- [Angular always detected running in production mode](https://github.com/rangle/angular-devtools/issues/916)\n- [Angular Optimization configuration][optconfig]\n- [Angular - Configuration is not set in the workspace](https://stackoverflow.com/questions/58876170/angular-configuration-is-not-set-in-the-workspace)\n\n[optconfig]: https://angular.io/guide/workspace-config#optimization-configuration\n[devtools]: https://chrome.google.com/webstore/detail/angular-devtools/ienfalfjdbdpebioblfackkekamfmbnh\n\n\n<hr />\n## [Notes on ‚ÄúRxJS Recipes ‚Äì Dominic Elm & Kwinten Pisman ‚Äì Uphill Conf 2019‚Äù](https://www.rockyourcode.com/notes-on-rxjs-recipes-from-uphill-conf-2019/)\n\nPublished on: 2021-12-05\n\ntags: RxJS, JavaScript, Notes\n\n\nHere are some notes on the [talk on RxJS Recipes][youtube] by Dominic Elm and Kwinten Pisman.\n\n[![Dominic Elm & Kwinten Pisman - RxJS Recipes - Uphill Conf 2019](https://i.ytimg.com/vi/W8T3eqUEOSI/sddefault.jpg)](https://youtube.com/watch?v=W8T3eqUEOSI 'Dominic Elm & Kwinten Pisman - RxJS Recipes - Uphill Conf 2019')\n\n## Identifying Patterns\n\n- What?: Result\n- When?: Trigger\n- How?: Pattern\n\nTriggers and results should _always_ be streams. If they are not streams, create streams yourself.\n\n## Repeater Pattern\n\nWork that needs to be executed n times (n > 1)\n\n```ts\nconst result$ = trigger$.pipe(<flatteningOperator>((_) => work$))\n```\n\n## Enricher\n\nLazily enrich a stream with data when trigger fires\n\n```ts\nconst result$ = trigger$.pipe(\n\twithLatestFrom(enricherSource$),\n\tmap(([trigger, data]) => <data>),\n);\n```\n\n## Group Aggregator\n\nWhenever the result is an Observable<boolean>\n\n```ts\nconst FT$ = falseTrigger$.pipe(mapTo(false))\nconst TT$ = trueTrigger$.pipe(mapTo(true))\n\nconst result$ = merge(FT$, TT$)\n```\n\n_(Note: While the [merge _operator_](https://rxjs.dev/api/operators/merge) is deprecated, you can still use it as a [creation function](https://rxjs.dev/api/index/function/merge). If you want to use `merge` in a pipe, use [mergeWith](https://rxjs.dev/api/operators/mergeWith) instead.)_\n\n## Work Decider\n\nWork that needs to be stopped and restarted when some trigger fires\n\n```ts\nconst result$ = trigger$.pipe(<flatteningOperator>((condition) => {\n  if (condition) workA$\n  else workB$\n}))\n```\n\nUse observables as the boundaries between services and components.\n\n## Error Decider\n\nWork that needs to be stopped and restarted when some trigger fires\n\n```ts\nconst result$ = trigger$.pipe(\n  retryWhen((error$) => {\n    return error$.pipe(\n      switchMap((_) => {\n        if (condition) workA$\n        else workB$\n      })\n    )\n  })\n)\n```\n\n## Links\n\n- [Dominic Elm & Kwinten Pisman - RxJS Recipes - Uphill Conf 2019][youtube]\n- [Slides from the talk](https://speakerdeck.com/kwintenp/rxjs-recipes)\n- [Code Repository](https://github.com/KwintenP/rxjs-recipes-talk)\n\n[youtube]: https://youtube.com/watch?v=W8T3eqUEOSI\n\n\n<hr />\n## [Tailwind CSS With Tailwind CLI](https://www.rockyourcode.com/tailwind-css-with-tailwind-cli/)\n\nPublished on: 2021-11-29\n\ntags: CSS, Node.js\n\n\n> How to install Tailwind CSS without a front-end framework\n\nHere's my cheat sheet to Tailwind CSS with [PostCSS][postcss] and [CSSNano][cssnano]. The guide follows the official [documentation][docs] with a few modifications.\n\n## Installation\n\nYou'll need a recent version of [Node.js](https://nodejs.org/en/).\n\n```bash\nnpm install -D tailwindcss@latest postcss@latest \\\n\tautoprefixer@latest cssnano\n```\n\n## PostCSS Configuration\n\nCreate a file `postcss.config.js`:\n\n```js\nconst cssnano = require('cssnano')\nconst tailwindcss = require('tailwindcss')\nconst autoprefixer = require('autoprefixer')\n\nconst plugins =\n  process.env.NODE_ENV === 'production'\n    ? [tailwindcss, autoprefixer, cssnano]\n    : [tailwindcss, autoprefixer]\n\nmodule.exports = { plugins }\n```\n\n## Tailwind Configuration\n\nCreate a file `tailwind.config.js`:\n\n```js\nmodule.exports = {\n  mode: 'jit',\n  purge: ['**/*.html'],\n  darkMode: false,\n  theme: {\n    extend: {},\n  },\n  variants: {\n    extend: {},\n  },\n  plugins: [],\n}\n```\n\n**Important**: Adjust the `purge` option to your use case.  \nI copy/pasted the configuration from somewhere else and Tailwind didn't work properly for me.\n\n## Use Tailwind CLI\n\n### 1. Without Customization\n\n```bash\nnpx tailwindcss --postcss \\\n\t-o <name and location of your css file>.css\n```\n\nReference the compiled CSS file in your HTML:\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <!-- ... -->\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link href=\"/main.css\" rel=\"stylesheet\" />\n  </head>\n  <body>\n    <!-- ... -->\n  </body>\n</html>\n```\n\n### 2. With Customization\n\nCreate a stylesheet and add the required utility classes:\n\n```css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* add any custom styles here */\n```\n\n```bash\nnpx tailwindcss --postcss \\\n\t-i <above stylesheet location>.css \\\n\t-o <name and location of your css file>.css\n```\n\n## Links\n\n- [Tailwind Installation][docs]\n- [Using Tailwind CSS in production](https://blog.logrocket.com/using-tailwind-css-in-production/)\n\n[docs]: https://tailwindcss.com/docs/installation\n[cssnano]: https://cssnano.co/\n[postcss]: https://postcss.org/\n\n\n<hr />\n\nThank you for reading my blog.\n\nDon't hesitate to reach out via [email](mailto:hi@rockyourcode.com\") or [Twitter](https://twitter.com/hisophiabrandt)!\n"}