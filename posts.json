{"titles":[" Docker Desktop Alternatives for macOs"," What All New Software Developers Need to Know"," Algorithmic Problem Solving Approach"," ‚ÄúHow to Think‚Äù by Andr√© Staltz ‚Äì Uphill Conf 2019"],"content":"Hello üëã! Thanks for subscribing.\n\n\nHere are the articles from last week:\n\n## [Docker Desktop Alternatives for macOs](https://www.rockyourcode.com/docker-desktop-alternatives-for-macos/)\n\nPublished on: 2022-02-06\n\ntags: DevOps, MacOs, Docker, Kubernetes\n\n\nIn this article I will show you two alternatives for [Docker Desktop](https://docs.docker.com/desktop/mac/install/) on macOs.\n\nBut why?\n\nDocker has introduced [new pricing changes to their Docker Desktop utility](https://www.theregister.com/2021/08/31/docker_desktop_no_longer_free/). This doesn't affect small companies or personal projects.\n\nBut the license change has sparked a new [discussion about Docker Desktop alternatives][hn], and I was interested in testing them out.\n\nI settled on the following two tools: **Rancher Desktop** and **Colima**.\n\n## 1. Rancher Desktop\n\n**[Rancher Desktop][rancher]** is an open-source [Electron.js](https://www.electronjs.org/) desktop application. You can install Rancher Desktop on macOs, Windows and Linux.\n\n![rancher desktop architecture](https://rancherdesktop.io/images/how-it-works-rancher-desktop.svg)\n\nInstallation (via [Homebrew](https://brew.sh)):\n\n```bash\nbrew install --cask rancher\n```\n\nYou'll still need the docker command-line tool (CLI).  \nRancher can install it via their GUI (graphical user interface) in the \"Supporting Utilities\" Tab. Alternatively, you can install it separately.\n\n(If you want to use [docker compose v2][compose], you'll need to have it on [your machine](https://github.com/docker/compose#where-to-get-docker-compose) - check the instructions below or read the [Rancher Desktop FAQ][rancherfaq].)\n\n**Stop Docker Desktop**, if you still have it on your machine. (You can have it installed, but you should not start the utility.)\n\nRancher Desktop offers a GUI to install and manage [Kubernetes][k8s]-cluster and container.\n\nYou can choose between [containerd](https://containerd.io/) or [dockerd/Moby](https://docs.docker.com/engine/reference/commandline/dockerd/) as a container runtime.\n\n![Rancher GUI on Mac](https://docs.rancherdesktop.io/assets/images/intro-dda4d7e855cb21ce875e945c97fb7bd0.png)\n\nIf you use containerd, you can manage your containers with [nerdctl](https://github.com/containerd/nerdctl). If you choose dockerd, you can continue using the docker command line tool.\n\nIn that case all well-known docker commands will still work, for example `docker ps`.\n\n## 2. Colima\n\n**[Colima][colima]** is an alternative to Docker Desktop that's solely available as a command-line utility.\n\nUnder the hood Colima uses the [Lima-VM][lima], same as Rancher Desktop.\n\n> Lima launches Linux virtual machines with automatic file sharing and port forwarding (similar to WSL2), and containerd.\n\nInstallation:\n\n```bash\nbrew install colima\n```\n\n**Stop Docker Desktop**, if you still have it on your machine. (You can have it installed, but you should not start the utility.)\n\nYou'll still need the docker command-line tool (CLI).\n\n(If you want to use [docker compose v2][compose], you'll need to install it on [your machine](https://github.com/docker/compose#where-to-get-docker-compose).)\n\nIf you now try to use docker, it won't work:\n\n```bash\ndocker ps\n> Can‚Äôt connect to the Docker daemon at unix:///var/run/docker.sock.\n> Is the docker daemon running?\n```\n\nStart colima:\n\n```bash\ncolima start\n```\n\nYou can [customize](https://github.com/abiosoft/colima/#customization-examples) the virtual machine:\n\n```bash\ncolima start --cpu 2 --memory 8 --disk 10\n```\n\nNow everything should work without problems.\n\nIf you don't want to use Colima anymore, [reset the Docker context](https://github.com/abiosoft/colima/issues/134). Colima overwrites the context in `/Users/<usernane>/.docker/config.json`:\n\n```bash\ndocker context use default\n```\n\n## How to Install Docker and Docker Compose v2\n\nIf you rip out Docker Desktop from your Mac, you'll need to take care of installing the necessary command-line tools.\n\nYou can install docker via Homebrew:\n\n```bash\nbrew install docker\n```\n\nInstall [compose v2][compose].\n\nFor Intel:\n\n```bash\nmkdir -p ~/.docker/cli-plugins/\ncurl -SL https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-darwin-x86_64 -o ~/.docker/cli-plugins/docker-compose\nchmod +x ~/.docker/cli-plugins/docker-compose\n```\n\nFor M1/ARM:\n\n```bash\nmkdir -p ~/.docker/cli-plugins/\ncurl -SL https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-darwin-aarch64 -o ~/.docker/cli-plugins/docker-compose\nchmod +x ~/.docker/cli-plugins/docker-compose\n\n```\n\nCheck if `docker compose` works:\n\n```bash\ndocker compose version\n```\n\n## Credentials Error\n\nYou might get the following error when you try to pull images:\n\n```bash\nError saving credentials: error storing credentials - err: exec: ‚Äúdocker-credential-osxkeychain‚Äù: executable file not found in $PATH, out:\n```\n\nInstall the [docker credentials helper](https://github.com/docker/docker-credential-helpers):\n\n```\nbrew install docker-credential-helper\n```\n\n## Links\n\n- [Lima VM][lima]\n- [Colima][colima]\n- [Rancher Desktop][rancher]\n- [Rancher Desktop documentaion](https://docs.rancherdesktop.io/)\n- [Rancher Desktop FAQ][rancherfaq]\n- [Hacker News \"Docker for Mac Without Docker Desktop\"][hn]\n- [Compose v2][compose]\n- [Goodbye Docker Desktop for Mac, Hello Colima](https://jacobtomlinson.dev/posts/2022/goodbye-docker-desktop-for-mac-hello-colima/) by Jacob Tomlinson\n\n[rancher]: https://rancherdesktop.io/\n[k8s]: https://kubernetes.io/\n[colima]: https://github.com/abiosoft/colima/\n[lima]: https://github.com/lima-vm/lima\n[compose]: https://github.com/docker/compose#linux\n[rancherfaq]: https://docs.rancherdesktop.io/faq\n[hn]: https://news.ycombinator.com/item?id=30116433\n\n\n<hr />\n## [What All New Software Developers Need to Know](https://www.rockyourcode.com/what-all-new-software-developers-need-to-know/)\n\nPublished on: 2021-12-16\n\ntags: Lab, Notes\n\n\nHere are the bulletpoints from the ~ 30 minute video [What All New Software Developers Need To Know][youtube] by Dave Farley.\n\n[![What All New Software Developers Need To Know](https://i.ytimg.com/vi/hjIlTaAMsbI/sddefault.jpg)](https://youtube.com/watch?v=hjIlTaAMsbI 'What All New Software Developers Need To Know')\n\n1. Nobody Knows Everything\n\n   Everyone is a junior in something. It's OK to say \"I don't know\".\n\n2. Apply \"Engineering Thinking\" to Solving Problems\n\n   Learn from your failures.\n\n3. Make Progress in Small Controlled Experiments\n\n   Get comfortable with not knowing. Always work in small steps.\n\n4. Be Suspicious of Your Ideas and Guesses\n\n   Always test your assumptions.\n\n5. Seek Mentors\n\n   Look to chose your own boss. Interview the organization you apply to.\n\n6. Seek Out Pair Programming\n\n7. Find Like Minds\n\n   Go to meetups, find open-source projects to contribute to.\n\n8. Don't Be Obsessed With Tools\n\n   Software development is about understanding the problem we are working on. Develop the skills to analyze problems. Talk to other people, make diagrams.\n\n9. Focus on the Problem You Are Solving\n\n   Your real job is not coding.\n\n10. Write Lots of Code - Play With It\n\n    Explore. Try coding exercises.\n\n11. It's About Thinking, Not Typing!\n\n    Learn the fundamentals and apply them. Learn test-driven-development.\n\n12. Fundamentals Are More Important Than Tools\n\n    Tools come and go, but the fundamentals stay.\n\n13. Language & Frameworks Should Be Incidental\n\n    Spend some time to learn them, but look for the deeper, profound skills.\n\n14. Solving Problems > Design > Coding > Language & Frameworks\n\n15. TDD Focus Maintain Focus on the Problem & Improves Design Quality\n\n16. Take Coupling/Dependencies Seriously\n\n17. Concurrency Requires Caution\n\n18. Optimise for Learning & Discovery\n\n19. Work Iteratively\n\n    Gather feedback.\n\n20. Work Incrementally\n\n    Make progress as a series of experiments.\n\n21. Be Empirical\n\n    Observe. Evaluate ideas in the real world.\n\n22. Optimise to Manage Complexity\n\n    Create modular systems. Improve cohesion. Separation of concerns. Manage Coupling. Use abstractions.\n\n## Source\n\n- [What All New Software Developers Need To Know][youtube] by Dave Farley\n\n[youtube]: https://www.youtube.com/watch?v=hjIlTaAMsbI\n\n\n<hr />\n## [Algorithmic Problem Solving Approach](https://www.rockyourcode.com/algorithmic-problem-solving-approach/)\n\nPublished on: 2021-12-14\n\ntags: Lab, Notes\n\n\nI bought the course [JavaScript Algorithms and Data Structures Masterclass][udemy] a while ago because I feared that I needed to do algorithm challenges when applying for a job. Luckily, that was not the case.\n\nIt's still a useful resource and I liked the tips for **solving problems**.\n\nThe tips come from the book [How to Solve It][solveit] by George Polya. It's a book on mathematics, but the principles apply to programming, too.\n\n## 1. Understanding the Problem\n\n1. Can I restate the problem in my own words?\n2. What are the inputs that go into the problem?\n3. What are the outputs that should come from the solution to the problem?\n4. Can the outputs be determined from the inputs? Do I have enough information to solve the problem?\n5. How should I label the important pieces of data that are a part of the problem?\n\n## 2. Concrete Examples\n\nComing up with examples can help you understand the problem better. Examples provide sanity checks: **user stories** and **unit tests**.\n\n- start with simple examples\n- progress to more complex examples\n- examples with empty inputs\n- examples with invalid inputs\n\n## 3. Break It Down\n\nUse pseudo-code or code comments. In an interview, explain the steps you want to take without worrying about details like language syntax.\n\n## 4. Solve the Problem (or Solve a Simpler Problem)\n\nIf you can't solve the complete problem, try to solve a simplified version.\n\n## 5. Look Back and Refactor\n* Can you check the result (does it work)?\n* Can you derive the result differently?\n* Can you understand it at a glance?\n* Can you use the result or method for some other problem?\n* Can you improve the performance of your solution?\n* Can you think of other ways to refactor?\n* How have other people solved this problem?\n\n## Links\n\n- [JavaScript Algorithms and Data Structures Masterclass][udemy] by Colt Steele\n- [How to Solve It][solveit] by George Polya\n\n[udemy]: https://www.udemy.com/course/js-algorithms-and-data-structures-masterclass/\n[solveit]: https://wikiless.org/wiki/How_to_Solve_It\n\n\n<hr />\n## [‚ÄúHow to Think‚Äù by Andr√© Staltz ‚Äì Uphill Conf 2019](https://www.rockyourcode.com/how-to-think-by-andre-staltz-uphill-conf-2019/)\n\nPublished on: 2021-12-12\n\ntags: Lab, Notes\n\n\nHere are short bullet points on the talk [How to Think][you].\n\n[![Andr√© Staltz - How to Think - Uphill Conf 2019](https://i.ytimg.com/vi/_fB8GRotdrc/sddefault.jpg)](https://youtube.com/watch?v=_fB8GRotdrc 'Andr√© Staltz - How to Think - Uphill Conf 2019')\n\n- mind map as a data structure\n- thinking as an algorithm\n- **have a structure for your thoughts**\n- humans imitate each other\n- humans have limited working memory\n- avoid blindly imitating each other, give new ideas at least 10 seconds to think about\n- acknowledge your feelings\n- improve your memory with tools (put your thoughts on paper)\n- debugging = investigating\n- deduction\n- git bisect\n- induction: make a good guess\n- backtracking: question everything\n- brainstorming\n- documentation: code that instruct humans\n- **think slowly and methodically**\n- be aware of your biases, feelings, and limitations\n- specialize, but keep learning\n\n## Links\n\n- [Andr√© Staltz - How to Think - Uphill Conf 2019][you]\n\n[you]: https://www.youtube.com/watch?v=_fB8GRotdrc\n\n\n<hr />\n\nThank you for reading my blog.\n\nDon't hesitate to reach out via [email](mailto:hi@rockyourcode.com\") or [Twitter](https://twitter.com/hisophiabrandt)!\n"}