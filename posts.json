{"titles":[" Notes on ‚ÄúHow to Write Online Workshop‚Äù by David Perell"," Making a Chrome Extension: How to Open Link in New Tab"," Notes on ‚ÄùHow to Build a Career in Tech‚Äù"," Twitter Tip: Tokimeki Unfollow"," TIL: How to Create Full Text RSS Feed for Hugo"," How to Install Docker Compose v2 on Linux (2021)"," Notes on ‚ÄúHack Your Career‚Äù"],"content":"Hello üëã! Thanks for subscribing.\n\n\nHere are the articles from last week:\n\n## [Notes on ‚ÄúHow to Write Online Workshop‚Äù by David Perell](https://www.rockyourcode.com/notes-on-how-to-write-online-workshop-by-perell/)\nPublished on: 2021-06-21\n\ntags: Lab, Notes, Writing\n\n\nIn [this ~1 hour video][youtube] David Perell explains his method for writing.\n\n[![How to Write Online Workshop](https://i.ytimg.com/vi/1MNS21b6O_s/sddefault.jpg)](https://youtube.com/watch?v=1MNS21b6O_s \"How to Write Online Workshop\")\n\n## The Capture Habit\n\nYou need a **note-taking system** for generating better ideas.\n\nWhat ideas should you save?\n\n**PILE**:\n\n- personal\n- inspiring\n- easily lost (losable)\n- effective (useful)\n\nSources: ebooks, online articles ‚Äì use a service like [readwise](https://readwise.io/).\n\nCapture your ideas while you read.\n\nCapture things while they are fresh.\n\n## Writing\n\n> Modern writing isn't **created**. It's **assembled**.\n\nYou have to cull your writing from vast amounts of notes.\n\nWriting can be a collaborate progress. Ask for feedback.\n\n### The Content Triangle\n\n![the content triangle](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8d875e6d-dbb0-4dc2-b269-ba7ea7df9800%2FUntitled.png?table=block&id=6450631b-1846-47ee-a34f-19ef93cc1c4e&spaceId=53987829-75b4-4609-ac44-484a14e7a394&width=2110&userId=&cache=v2)\n{{<rawhtml>}}<small><em>image from <a href=\"https://www.notion.so/David-Perell-How-to-Write-Online-Workshop-Notes-by-bronsonchang-6cfaff84afd84b6592db2eb4461b3e40#06b051b6395e450fbe49bce53dd2fb9c\">Bronson Chang's notes</a></em></small>{{</rawhtml>}}\n\nconversations -> share -> feedback -> create content -> distribute\n\n**2-minute-drill**: _explain_ your idea in 2 minutes or less by _talking_. Humans are better at talking than reading. After that, you can distill the audio to write your article.\n\nYou don't need to be 100% original.\n\n\n## Improve Your Writing\n\n**CLEAR** sentences:\n\n- Create a rhythm\n- Link your sentences\n- Eliminate anything that's confusing\n- Add colorful details\n- Remove unnecessary words\n\n> Don't just write **words**. Write **music**.\n\nSweet spot: words people know, but don't say.\n\n![words to use](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd9f4b96b-1e71-4f48-81b7-f5ad9457eba4%2FUntitled.png?table=block&id=b674e067-290d-4993-9193-c03e6631bded&spaceId=53987829-75b4-4609-ac44-484a14e7a394&width=1630&userId=&cache=v2)\n{{<rawhtml>}}<small><em>image from <a href=\"https://www.notion.so/David-Perell-How-to-Write-Online-Workshop-Notes-by-bronsonchang-6cfaff84afd84b6592db2eb4461b3e40#06b051b6395e450fbe49bce53dd2fb9c\">Bronson Chang's notes</a></em></small>{{</rawhtml>}}\n\n## Telling a Story\n\n**Roller-Coaster**: start with a setup (tension rises), conflict, resolution.\n\n![roller-coaster storytelling](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcfd62b4f-178c-45c3-b612-bf332936093b%2FUntitled.png?table=block&id=3a62a8a5-1fc8-4471-a485-dc07a4a0cbfb&spaceId=53987829-75b4-4609-ac44-484a14e7a394&width=1880&userId=&cache=v2)\n{{<rawhtml>}}<small><em>image from <a href=\"https://www.notion.so/David-Perell-How-to-Write-Online-Workshop-Notes-by-bronsonchang-6cfaff84afd84b6592db2eb4461b3e40#06b051b6395e450fbe49bce53dd2fb9c\">Bronson Chang's notes</a></em></small>{{</rawhtml>}}\n\n## Learn to Write FAST\n\n**FAST** Writing: write first, research second. Write in the course of your life.\n\n- Find\n- Assemble\n- Speak\n- Teach\n\nUse your note-taking system, structure ideas by talking, record yourself, set a timer.\n\n## Audience\n\n> Grow your audience on public platforms. Build relationships on private ones.\n\n1. Create value on public platforms.\n2. Send audience to private platforms.\n3. store value with your email list.\n\n## Build a Personal Monopoly\n\nDefine your personal monopoly:\n\n- specific (the more narrow the niche, the better)\n- unusual (skills or knowledge not often found together)\n- complementary (skills that reinforce and amplify each other)\n- experimental (skills gained through experience).\n\nAim for **niche fame**.\n\n> Get going. Then get good.\n\n## Writing and Thinking\n\n> When writing is thinking, re-writing is re-thinking.\n\nWhen you put words on paper, you free up you mind which allows you to see things that you didn't realize before.\n\nWhen you write, you give yourself opportunity to go over ideas over and over again.\n\n## Imposter Syndrome\n\n[You are an imposter](https://youtu.be/1MNS21b6O_s?t=4089), because you are trying to do things out of your comfort zone.\n\nBut _everyone is an imposter_. David Perell didn't know how to run a writing school before he tried. Jeff Bezos didn't know how to run a trillion-dollar business like Amazon.\n\nWhen you realize that everybody is an imposter, you realize that nobody is an imposter.\n\nYou have an obligation to share your ideas. This is how our society advances.\n\n## Links\n\n- [How to Write Online Workshop (David Perell)][youtube]\n- [Notes on the talk by Bronson Chang](https://www.notion.so/David-Perell-How-to-Write-Online-Workshop-Notes-by-bronsonchang-6cfaff84afd84b6592db2eb4461b3e40)\n\n[youtube]: https://www.youtube.com/watch?v=1MNS21b6O_s\n\n\n<hr />\n## [Making a Chrome Extension: How to Open Link in New Tab](https://www.rockyourcode.com/making-a-chrome-extension-how-to-open-link-in-new-tab/)\nPublished on: 2021-06-20\n\ntags: JavaScript\n\n\nLast year I created a [Chrome extension that opens a new Picture in Picture window][pip]. With the extension, I can see my browser (or a different window) in a small window in a different application.\n\nI want to open the extension in a new tab.\n\nHere's how to do that.\n\nYou'll need a `manifest.json` file with the following content:\n\n```json\n{\n  \"manifest_version\": 2,\n  \"name\": \"Picture in Picture\",\n  \"description\": \"This extension will open a new tab for Picture in Picture mode\",\n  \"version\": \"1.0\",\n  \"background\": {\n    \"scripts\": [\"background.js\"],\n    \"persistent\": false\n  },\n  \"browser_action\": {\n    \"default_icon\": \"camera.png\"\n  },\n  \"icons\": {\n    \"64\": \"camera.png\"\n  },\n  \"permissions\": [\"tabs\"]\n}\n```\n\nPlease note the `permissions` and the `background` keys.\n\n`background.js` contains one function:\n\n```js\nchrome.browserAction.onClicked.addListener(function (tab) {\n  chrome.tabs.create({\n    url: chrome.extension.getURL('index.html'),\n    selected: true,\n  })\n})\n```\n\nThat means that the extension will open the `index.html` file:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Picture In Picture</title>\n  </head>\n  <body>\n    <!-- your html code -->\n    <script src=\"./index.js\"></script> <!-- index.js contains the main logic -->\n  </body>\n</html>\n```\n\nYou can see the complete code on [GitHub][pip].\n\n## Links\n\n- [Chrome extension: How to open a link in new tab?](https://stackoverflow.com/questions/16503879/chrome-extension-how-to-open-a-link-in-new-tab)\n\n[pip]: https://github.com/sophiabrandt/pip-chrome-extension\n\n\n<hr />\n## [Notes on ‚ÄùHow to Build a Career in Tech‚Äù](https://www.rockyourcode.com/notes-on-how-to-build-a-career-in-tech/)\nPublished on: 2021-06-19\n\ntags: Lab, Notes\n\n\nKurt Kemple is a self-taught programmer who learned to code when incarcerated. In his [talk with Jason Lengstorf][youtube] he shares his experiences.\n\nHere are my notes from the ~1 hour [video][youtube]:\n\n[![How to Build a Career in Tech: Kurt Kemple Connects the Dots](https://i.ytimg.com/vi/4fq8QlpEMec/sddefault.jpg)](https://youtube.com/watch?v=4fq8QlpEMec \"How to Build a Career in Tech: Kurt Kemple Connects the Dots\")\n\nTechnical skills are **a small part of your day to day job**. Kurt learned how to _prioritize, commmunicate with others_ and how to _organize the work_ from his previous experience in construction work and as a line cook. _Break a big task into small pieces._\n\n**Empathy and understanding**: \"Your perspective of the world is not the center of everything, it's not the default. Lots of people have experiences that are different from yours.\"\n\nKnow the stakeholders. Understand what they are invested in.\n\n**How to learn?** Kurt learns best by doing. He breaks new skills into manageable chunks, and practices them step by step.\n\n**How to break into tech**: Until you have your first role, you need _something_ for your resume ‚Äî either certificates or a great portfolio. You also want to _highlight_ the skills you want to get hired for.\n\nOne of the best ways to break into tech is to **build a community**. Learn in public.  \nOften, job opportunities come from your network.\n\nResume tips:  \n- [two column layout (1 page)](https://youtu.be/4fq8QlpEMec?t=1494): on the top left the most important info, below that the most important experience (certificate, a project), on the right side put the second most important info\n- make different resumes for different jobs\n\n**Remote work**: traditionally, the advice for junior developers was to aim for an on-site job, but that's not possible due to the pandemic.  \nIdeally, your future company either has a track record for remote work or already on-boarded junior developers.\n\nFind the people in your job that are happy to answer your questions, and ask them ‚Äî a lot. Communicate early, communicate often. Optimize for feedback.\n\n**Focus on the _whys_, not _hows_.** Everyone can pick up the newest and hottest tech stack and learn how to use it. Rather aim to understand why to use a technology.\n\nJason Lengstorf, the interviewer, also explains that he doesn't expect juniors to know a lot, but he wants to get the sense that the junior can find out (\"self-starter\"). Be confident in yourself, be confident in your ability to learn and grow.\n\n**Be aware of burnout.** Don't start a new job and deliver 110%. This becomes your baseline, and soon you'll be expected to clock in 130%.  \nIf possible, dedicate 70-80% to productivity on the job, and around 20-30% to learning and growing.\n\n**How do you learn to program when you don't know enough about computers?**  \nTry to get a basic understanding of how computers and the internet work, how to use the keyboard effectively. If you don't know anything about computers, you're trying to learn two things at once.\n\n## Links\n\n- [How to Build a Career in Tech: Kurt Kemple Connects the Dots][youtube]\n\n[youtube]: https://www.youtube.com/watch?v=4fq8QlpEMec\n\n\n<hr />\n## [Twitter Tip: Tokimeki Unfollow](https://www.rockyourcode.com/twitter-tip-tokimeki-unfollow/)\nPublished on: 2021-06-18\n\ntags: Tools\n\n\nTwitter shines when you have an engaging Twitter homepage. The more interesting the accounts you follow, the more interesting your Twitter feed.\n\nMy Twitter account is more than 10 years old, and I decided to prune it.\n\n**[Tokimeki Unfollow][tokimeki]** is a cute and free online tool. The web application allows you to comb through your accounts to see if they are still relevant to you.\n\nTokimeki Unfollow uses the \"Konmari\" method, where you ask yourself if an account still \"sparks joy\".\n\nGive it a [try][konmari]!\n\n## Links\n\n- [Tokimeki Unfollow][tokimeki] by Julius Tarng\n\n[tokimeki]: https://tokimeki-unfollow.glitch.me/#\n\n\n<hr />\n## [TIL: How to Create Full Text RSS Feed for Hugo](https://www.rockyourcode.com/til-how-to-create-full-text-rss-feed-for-hugo/)\nPublished on: 2021-06-17\n\ntags: TIL, Hugo\n\n\nWho wants to read an incomplete RSS feed that forces you to open the original website?\n\n[Hugo][gohugo] is the static site generator that powers my blog.  \nHugo ships with a [default RSS template][defaultrsstemplate] which only shows a summary of your articles.\n\nIf you want to read the full content, you'll need to visit the website. That sucks.\n\nI want to create a **full-text RSS feed** for my blog.\n\n## Template Lookup Order\n\nWe'll need to create a modified RSS template. Let's make sure that Hugo will use the new one instead of the default template that comes with Hugo or the [Hugo theme][panr].\n\nI created a new directory (`layouts`) in my Hugo folder (the root folder, which also contains my `config.toml` file).\n\nLet's copy the [default Hugo RSS template][defaultrsstemplate] into a file called `index.xml` (`layouts/index.xml`). That's on position 5 in the template lookup order and higher than the default template.\n\n## Create New RSS Template\n\n```go\n{{- $pctx := . -}}\n{{- if .IsHome -}}{{ $pctx = .Site }}{{- end -}}\n{{- $pages := slice -}}\n{{- if or $.IsHome $.IsSection -}}\n{{- $pages = $pctx.RegularPages -}}\n{{- else -}}\n{{- $pages = $pctx.Pages -}}\n{{- end -}}\n{{- $limit := .Site.Config.Services.RSS.Limit -}}\n{{- if ge $limit 1 -}}\n{{- $pages = $pages | first $limit -}}\n{{- end -}}\n{{- printf \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" standalone=\\\"yes\\\"?>\" | safeHTML }}\n<rss version=\"2.0\" xmlns:atom=\"http://www.w3.org/2005/Atom\">\n  <channel>\n    <title>{{ if eq  .Title  .Site.Title }}{{ .Site.Title }}{{ else }}{{ with .Title }}{{.}} on {{ end }}{{ .Site.Title }}{{ end }}</title>\n    <link>{{ .Permalink }}</link>\n    <description>Recent content {{ if ne  .Title  .Site.Title }}{{ with .Title }}in {{.}} {{ end }}{{ end }}on {{ .Site.Title }}</description>\n    <generator>Hugo -- gohugo.io</generator>{{ with .Site.LanguageCode }}\n    <language>{{.}}</language>{{end}}{{ with .Site.Author.email }}\n    <managingEditor>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</managingEditor>{{end}}{{ with .Site.Author.email }}\n    <webMaster>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</webMaster>{{end}}{{ with .Site.Copyright }}\n    <copyright>{{.}}</copyright>{{end}}{{ if not .Date.IsZero }}\n    <lastBuildDate>{{ .Date.Format \"Mon, 02 Jan 2006 15:04:05 -0700\" | safeHTML }}</lastBuildDate>{{ end }}\n    {{- with .OutputFormats.Get \"RSS\" -}}\n    {{ printf \"<atom:link href=%q rel=\\\"self\\\" type=%q />\" .Permalink .MediaType | safeHTML }}\n    {{- end -}}\n    {{ range $pages }}\n    <item>\n      <title>{{ .Title }}</title>\n      <link>{{ .Permalink }}</link>\n      <pubDate>{{ .Date.Format \"Mon, 02 Jan 2006 15:04:05 -0700\" | safeHTML }}</pubDate>\n      {{ with .Site.Author.email }}<author>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</author>{{end}}\n      <guid>{{ .Permalink }}</guid>\n      <description>{{ .Summary | html }}</description>\n    </item>\n    {{ end }}\n  </channel>\n</rss>\n```\n\nThe trick lies in changing the content of the XML `<description>` tag.\n\nThe RSS 2.0 spec says that the description element can contain \"the item's full content or a summary of its contents, a decision entirely at the discretion of the publisher.\"\n\nCurrently, we only show a short summary:\n```go\n<description>{{ .Summary | html }}</description>\n```\n\nChange the line to the following:\n```go\n<description>{{ .Content | html }}</description>\n```\n\n### Bonus Tip: RSS Feed Limit\n\nHugo builds a RSS feed from the complete article backlog. You might want to restrict the number of RSS entries if you have many blog posts.\n\nYou need to add the `rssLimit` field.\n\nExample `config.toml`:\n```toml\nbaseurl = \"https://www.rockyourcode.com\"\nlanguageCode = \"en-us\"\nrssLimit = 25\n```\n\n## Links\n\n- [Hugo][hugorss]\n- [RSS Board](https://www.rssboard.org/)\n- [Full Content RSS Feeds With Hugo](https://unusually.pink/full-content-rss-feeds-with-hugo/)\n\n[gohugo]: https://gohugo.io\n[defaultrsstemplate]: https://gohugo.io/templates/rss/#the-embedded-rssxml\n[hugorss]: https://gohugo.io/templates/rss\n[panr]: https://github.com/panr/hugo-theme-terminal\n[rssboard]: https://www.rssboard.org/rss-profile#element-channel-item-description\n\n\n<hr />\n## [How to Install Docker Compose v2 on Linux (2021)](https://www.rockyourcode.com/how-to-install-docker-compose-v2-on-linux-2021/)\nPublished on: 2021-06-16\n\ntags: Unix, DevTools, DevOps, Docker\n\n\nIn the video [Docker Compose v2: What's New in 2021: DevOps and Docker Live Show (Ep 126)][bretfisheryoutube] Bret Fisher introduces compose v2.\n\ncompose is an [instrument for running multiple docker containers](https://docs.docker.com/compose/) on your local machine. I use it often to spin up a database container and a separate application container.\n\ncompose v2, a plugin for docker, is written from the ground up in Go and integrates better with existing tools.\n\nThe CLI is a drop-in replacement for the previous Python program docker-compose. The Python version is much slower than the new Go version.\n\nIf you want to use compose v2 on your Linux machine, you have to install it manually.\n\n## Install Compose V2 on Linux\n\nFind the [latest release][cli] with the `v2` tag. Currently, that's `v2.0.0-beta.3`.\n\n(I'm using amd64, if you're using the new Mac M1, you'll need to find the release for the arm architecture.)\n\nNow type the [following commands into your terminal][ghissue]):\n\n```bash\n# create the docker plugins directory if it doesn't exist yet\nmkdir -p ~/.docker/cli-plugins\n# download the CLI into the plugins directory\ncurl -sSL https://github.com/docker/compose-cli/releases/download/v2.0.0-beta.3/docker-compose-linux-amd64 -o ~/.docker/cli-plugins/docker-compose\n# make the CLI executable\nchmod +x ~/.docker/cli-plugins/docker-compose\n```\n\nThe tool should work:\n\n```bash\ndocker compose version\n> Docker Compose version 2.0.0-beta.3\n```\n\nLearn more about compose v2  in this [video][bretfisheryoutube]:\n[![Docker Compose v2: What's New in 2021: DevOps and Docker Live Show (Ep 126)](https://i.ytimg.com/vi/2MJn2yfa6A8/sddefault.jpg)](https://youtube.com/watch?v=2MJn2yfa6A8 \"Docker Compose v2: What's New in 2021: DevOps and Docker Live Show (Ep 126)\")\n\n## Links\n\n- [Docker Compose v2: What's New in 2021: DevOps and Docker Live Show (Ep 126)][bretfisheryoutube]\n- [GitHub Docker Compose-CLI](https://github.com/docker/compose-cli)\n- [GitHub: Encountered problem with Linux installation script #1781][ghissue] with solution by [Eric Landry](https://twitter.com/ericlandry)\n\n[bretfisheryoutube]: https://www.youtube.com/watch?v=2MJn2yfa6A8\n[cli]: https://github.com/docker/compose-cli/releases\n[ghissue]: https://github.com/docker/compose-cli/issues/1781#issuecomment-860661637\n\n\n<hr />\n## [Notes on ‚ÄúHack Your Career‚Äù](https://www.rockyourcode.com/notes-on-hack-your-career/)\nPublished on: 2021-06-15\n\ntags: Lab, Notes\n\n\nTroy Hunt talks about his journey from a corporate software job to independence in **[Hack Your Career][youtube]** (58 min video).  \nTroy is probably best known for the platform [have i been pwned?](https://haveibeenpwned.com/).  \n[![Hack Your Career - Troy Hunt](https://i.ytimg.com/vi/-MUhcgXBj_A/sddefault.jpg)](https://youtube.com/watch?v=-MUhcgXBj_A \"Hack Your Career - Troy Hunt\")\n\n> One of the best ways to make yourself more marketable as a software developer is have an active online profile\n\nWhat opportunities are you going to make for yourself?\n\nStart a blog.\n\nIf you are willing to put yourself out there (writing online), you get valuable feedback from others. It's documentation for you and others.\n\nYou don't have to have a goal or a niche. You start.\n\nNext step: speaking. Great exposure, you will be outside your comfort zone.\n\nStart a podcast, start a user group, hold workshops. Use StackOverflow.\n\nYou will offend somebody.\n\n> If you're not upsetting someone, you're not trying hard enough!\n\nBut you will also make connections with others.\n\n> Your social media profile is your opportunity to demonstrate your character.\n\n[Tech staff is a cost factor][kalzumeus]. Future-proof yourself by showing your value (online) before you get fired.\n\n## Links\n- [Hack Your Career - Troy Hunt][youtube]\n- [Don't Call Yourself A Programmer, And Other Career Advice][kalzumeus] by Patrick McKenzie\n\n[youtube]: https://www.youtube.com/watch?v=-MUhcgXBj_A\n[kalzumeus]: https://www.kalzumeus.com/2011/10/28/dont-call-yourself-a-programmer/\n\n\n<hr />\n\nThank you for reading my blog.\n\nDon't hesitate to reach out via [email](mailto:hi@rockyourcode.com\") or [Twitter](https://twitter.com/hisophiabrandt)!\n"}