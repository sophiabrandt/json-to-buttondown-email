{"titles":[" How I Remove Duplicate Lines From a File With awk"," Notes on ‚ÄùHow to Promote Yourself to Potential Employers‚Äù"," TIL: Pass Multiple Commands to Xargs"," Notes on ‚ÄùCBT for Imposter Syndrome and Career Advancement‚Äù"," Doubts About My Daily Blogging Experiment"," TIL: How to Set Multiple GOPATHs"," Notes on ‚ÄùThe Counterintuitive Secret to Shipping Better Articles Faster‚Äù"],"content":"Hello üëã! Thanks for subscribing.\n\n\nHere are the articles from last week:\n\n## [How I Remove Duplicate Lines From a File With awk](https://www.rockyourcode.com/how-i-remove-duplicate-lines-from-a-file-with-awk/)\nPublished on: 2021-06-28\n\ntags: TIL, Unix, Shell\n\n\nOne of the repositories I maintain is a beginner's GitHub repo. New developers can make their first pull request by adding their GitHub handle to a simple text file.\n\nWhen pull requests get merged into the master branch, they often contain duplicates. The file has more than 7,000 lines. Names are not sorted alphabetically.\n\nI needed a simple way to remove all duplicates lines from the file without sorting the lines.\n\nI'm using [`awk`][awk], a Unix shell program. I'm not proficient in using `awk`, but I've found useful one-liners that do what I want.\n\n\nFor reference, this is how my file _should_ look like:\n```\n# CONTRIBUTORS\n\n- [@RupamG](https://github.com/RupamG)\n\n- [@hariharen9](https://github.com/hariharen9)\n\n- [@clevermiraz](https://github.com/clevermiraz)\n\n- [@smeubank](https://github.com/smeubank)\n\n- [@LJones95](https://github.com/LJones95)\n\n- [@shannon-nz](https://github.com/shannon-nz)\n\n- [@sammiepls](https://github.com/sammiepls)\n\n```\n\nHere's how it often looks like:\n```\n# CONTRIBUTORS\n\n- [@RupamG](https://github.com/RupamG)\n\n- [@hariharen9](https://github.com/hariharen9)\n\n- [@clevermiraz](https://github.com/clevermiraz)\n\n- [@smeubank](https://github.com/smeubank)\n\n- [@LJones95](https://github.com/LJones95)\n- [@hariharen9](https://github.com/hariharen9)\n\n- [@shannon-nz](https://github.com/shannon-nz)\n\n- [@sammiepls](https://github.com/sammiepls)\n- [@shannon-nz](https://github.com/shannon-nz)\n```\n\n### 1. Remove all empty lines\n\n```bash\nawk 'NF > 0' file.txt\n```\n`NF` is the [Number of Fields Variable](https://www.grymoire.com/Unix/Awk.html#toc-uh-17).\n\n### 2. Remove duplicates\n\n```bash\nawk '!seen[$0]++' file.txt\n```\n\nI stole this command from [opensource.com](https://opensource.com/article/19/10/remove-duplicate-lines-files-awk), where you can find an explanation on how it works.\n\n### 3. Add Empty Lines Again\n\n```bash\nawk '{print; print \"\";}' file.txt\n```\nSee [Stackexchange](https://unix.stackexchange.com/questions/23545/insert-a-new-line-after-every-n-lines).\n\n## Links\n\n- [awk][awk]\n- [The GNU Awk User‚Äôs Guide][gnu]\n- [Awk tutorial][grymoire]\n\n[awk]: https://en.wikipedia.org/wiki/AWK\n[gnu]: https://www.gnu.org/software/gawk/manual/gawk.html\n[grymoire]: https://www.grymoire.com/Unix/Awk.html\n\n\n<hr />\n## [Notes on ‚ÄùHow to Promote Yourself to Potential Employers‚Äù](https://www.rockyourcode.com/notes-on-how-to-promote-yourself-to-potential-employers/)\nPublished on: 2021-06-27\n\ntags: Notes, Lab\n\n\nIn [this talk][youtube], Abbey Perini enthusiastically shares her tips for showcasing your strengths for the job search as a software developer.\n\n[![How to Promote Yourself to Potential Employers ‚Äì Abbey Perini ‚Äì Virtual Coffee Brownbag](https://i.ytimg.com/vi/NVaZu8--4p0/sddefault.jpg)](https://youtube.com/watch?v=NVaZu8--4p0 'How to Promote Yourself to Potential Employers ‚Äì Abbey Perini ‚Äì Virtual Coffee Brownbag')\n\n## How to Practice Confidence\n\n- collect wins\n- set goals (beware the productivity trap)\n- mantras\n- building things (no coding)\n- vision boards\n- find a support network (helpful: other people that are also going through a similar experience)\n- rest & recuperate\n\n## How to Apply Your New Confidence\n\n- practice \"self-promotion\": it feels icky at first!\n- what are your top 3 skills? practice telling others about them!\n\n## Job Search\n\n- **no one ever matches the job description 100%!**\n- requirements: if you meet at least one of them, you are normally qualified enough to apply\n- search for keywords that you meet: tech stack, job description, etc.\n- use those keywords for the cover letter/resume\n- for prior job experience in a non-tech role: your experience applies, especially soft skills\n- previous job experience shows that you are reliable, you are employable\n- if you are stay-at-home-parent or have other gaps in your resume, come up with your story about the gap and practice it (_note:_ watch this [part of the YouTube video for great tips!](https://youtu.be/NVaZu8--4p0?t=896))\n    \n## Interview Questions\n\n- \"Tell us a little about yourself\"\n- \"Tell us about a difficult project you worked on and how you handled it.\"\n- \"Tell me about \\[X\\] project from your resume.\"\n- for career transitioners: practice to describe your learning process\n- re-frame your doubts: you can always find reasons to discount your experience, but is that true? You have skills!\n\n## Other Tips\n\n- networking\n- online presence\n- share your learnings, share that you're on a job search, share the cool thing that you made (loose the caveats)\n- references\n\n## Links\n\n- [How to Promote Yourself to Potential Employers ‚Äì Abbey Perini ‚Äì Virtual Coffee Brownbag][youtube]\n- [Abbey Perini](https://abbeyperini.dev/)\n- [Virtual Coffee](https://virtualcoffee.io/) ‚Äî a community for all developers\n\n_image credit: [Karsten Winegart](https://unsplash.com/photos/zQz_GXVAGOA)_\n\n[youtube]: https://www.youtube.com/watch?v=NVaZu8--4p0\n\n\n<hr />\n## [TIL: Pass Multiple Commands to Xargs](https://www.rockyourcode.com/til-pass-multiple-commands-to-xargs/)\nPublished on: 2021-06-26\n\ntags: TIL, Unix, Shell\n\n\nI'm using [`fd`][fd], an alternative to the Unix native `find`, to find a list of files and copy them to a different location, using `xargs`. On Unix, we use `cp` to copy the files, but the command is silent.  \nI don't know which files `cp` will copy. Maybe I could use `echo` to log the files?\n\n**How can I pass multiple shell commands to `xargs`**?\n\nPrevious command:\n\n```bash\nfd --changed-within 1hour -0 | xargs -I cp {} /new/location/\n```\n\n- `fd -0 --changed-within`: find all files changed within a time frame, separate results by null character\n- `|`: pipe previous command as `stdin` to the next command\n- `xargs -I cp {} /new/location/`: takes the input from previous command (`fd`) and uses `cp` to copy the files; `{}` is a placeholder\n\nWhat does _not_ work:\n\n```bash\nfd --changed-within 1hour -0 | xargs -I cp {} /new/location/ | xargs -I echo {}\n```\n\nWhat does work:\n\n```bash\nfd --changed-within 1hour -0 | xargs -0 sh -c \\\n'for arg do echo \"$arg\"; cp \"$arg\" /new/location/; done' _\n```\n\n- `xargs -0`: use null as separating character (useful for files that contain whitespace)\n- `sh -c`: read commands from next string\n- `'for arg do echo \"$arg\"; cp \"$arg\" /new/location/; done' _`: loop over each input and first use `echo` to log, then `cp` to new location\n- `_` is a placeholder for `$0`, such that other data values added by `xargs` become `$1` and onward, which happens to be the default set of values a `for` loop iterates over.\n\nThis is shell magic to me!\n\nI found the solution on [StackOverflow][so], where you can also find a more detailed explanation.\n\n[so]: https://stackoverflow.com/questions/6958689/running-multiple-commands-with-xargs\n[fd]: https://github.com/sharkdp/fd\n\n\n<hr />\n## [Notes on ‚ÄùCBT for Imposter Syndrome and Career Advancement‚Äù](https://www.rockyourcode.com/notes-on-cbt-for-imposter-syndrome-and-career-advancement/)\nPublished on: 2021-06-25\n\ntags: Notes, Lab\n\n\nHere are my notes from the ~ 45 min [talk by Rahat Chowdhury][youtube].\n\n[![CBT for Imposter Syndrome and Career Advancement ‚Äì Rahat Chowdhury ‚Äì Virtual Coffee Brownbag](https://i.ytimg.com/vi/neeyccmPEpU/sddefault.jpg)](https://youtube.com/watch?v=neeyccmPEpU 'CBT for Imposter Syndrome and Career Advancement ‚Äì Rahat Chowdhury ‚Äì Virtual Coffee Brownbag')\n\n## What is CBT?\n\nCognitive Behavioral Therapy is a talk therapy where you challenge your thoughts.\n\nExample of an initial thought (imposter syndrome):\n\n> They gave me the job and I don't understand why. I couldn't finish the code challenge and the interviewer had to guide me through the process. How will I manage to do this job on my own?\n\n### Cognitive Distortions\n\nCognitive Distortions are how your mind fools you.\n\nExamples:\n\n- filtering: removing the positive information and focusing on the negative ones\n- catastrophizing - exaggerating an event to an absolute worst case scenario\n- always being right\n- polarized thinking\n- overgeneralization\n- jumping to conclusions\n- fallacy of change\n- shoulds: \"I should have done that differently.\"\n\n**Challenge your thoughts!**\n\n## Imposter Syndrome\n\n> We need to explore the deeper reasoning behind our imposter syndrome.\n\n### Strategies to Help With Imposter Syndrome\n\n- record your wins (in private or public)\n- wins are wins _even if they are small_\n- use those for stories to tell in interviews\n- remember that it's a process: you will suck at it first, until you get better\n\n## Links\n\n- [CBT for Imposter Syndrome and Career Advancement ‚Äì Rahat Chowdhury ‚Äì Virtual Coffee Brownbag][youtube]\n- [Rahat Chowdhury](https://rahat.dev/)\n- [Virtual Coffee](https://virtualcoffee.io/) ‚Äî a community for all developers\n\n[youtube]: https://www.youtube.com/watch?v=neeyccmPEpU\n\n\n<hr />\n## [Doubts About My Daily Blogging Experiment](https://www.rockyourcode.com/doubts-about-my-daily-blogging-experiment/)\nPublished on: 2021-06-24\n\ntags: this_blog, Writing, Lab\n\n\n[Last month I decided to try to write a blog post each day](https://www.rockyourcode.com/experiment-100-days-of-blogging/).\n\nToday's article is the embodiment of my frustration with this experiment.\n\nWhile I code every day, some days I don't have anything interesting to share. No learnings, no insights that warrant a blog post.\n\nToday the daily writing habit feels pointless.\n\nI will try to keep it up for a few days more.\n\nMy new job (first job in tech!) starts next week. Will this be the time to ditch the writing experiment?\n\n[Let me know?](http://www.rockyourcode.com/pages/contact)\n\n\n<hr />\n## [TIL: How to Set Multiple GOPATHs](https://www.rockyourcode.com/til-how-to-set-multiple-gopaths/)\nPublished on: 2021-06-23\n\ntags: TIL, Go, Unix, Fish, Shell\n\n\n# How to set multiple workspaces (GOPATH)\n\n> A Go Workspace is how Go manages our source files, compiled binaries, and cached objects used for faster compilation later. It is typical, and also advised, to have only one Go Workspace, though it is possible to have multiple spaces. The `GOPATH` acts as the root folder of a workspace. [^1]\n\n## Why multiple workspaces?\n\nI'd like to install my global binaries into a central location. These programs are third-party CLIs that I want to use everywhere in my terminal as a consumer. I don't develop these progams.\n\nAt the same time, I'd like to make sure that my `GOPATH` is correct for my actual projects that I'm working on.\n\n> Executables are installed in the directory named by the GOBIN environment variable, which defaults to $GOPATH/bin or $HOME/go/bin if the GOPATH environment variable is not set. [^2]\n\n## How to Set GOPATH?\n\nCheck the [wiki][wiki] for your operating system and shell.\n\nFor Unix, Fish shell:\n\n```sh\nset -x -U GOPATH $HOME/.go:$HOME/projects/go/workspace\n```\n\nThis command sets an universal variable for both `$HOME/.go` and `$HOME/projects/go/workspace`.\n\n## Fish Shell: Add GOPATH folders to $fish_user_paths\n\n[Use `fish_add_path` to add more locations to fish's `$PATH`.](https://fishshell.com/docs/current/cmds/fish_add_path.html)\n\nTo use the \"global\" Go binaries as well as your own workspace binaries:\n\n```sh\nfish_add_path $HOME/.go\nfish_add_path $HOME/projects/go/workspace\n```\n\n[^1]: [Understanding the GOPATH][do]  \n[^2]: [golang.org](https://golang.org/cmd/go/#hdr-Compile_and_install_packages_and_dependencies)\n\n[do]: https://www.digitalocean.com/community/tutorials/understanding-the-gopath\n[wiki]: https://github.com/golang/go/wiki/SettingGOPATH\n\n\n<hr />\n## [Notes on ‚ÄùThe Counterintuitive Secret to Shipping Better Articles Faster‚Äù](https://www.rockyourcode.com/notes-on-the-counterintuitive-secret-to-shipping-better-articles-faster/)\nPublished on: 2021-06-22\n\ntags: Notes, Lab\n\n\nIn this ~1 hour video developer advocate [Sam Julien][samjulien] shares his tips for shipping faster:\n[![The Counterintuitive Secret to Shipping Better Articles Faster - Sam Julien at Hashnode Bootcamp III](https://i.ytimg.com/vi/DIG8GGg-PXw/0.jpg)](https://youtube.com/watch?v=DIG8GGg-PXw 'The Counterintuitive Secret to Shipping Better Articles Faster - Sam Julien at Hashnode Bootcamp III')\n\n## tl;dr\n\nYou'll need a _system_ that enables you to _consistently_ produce results on which you can get feedback on.\n\n> Action + Speed + Feedback = Growth\n\n## How to Create Consistently?\n\nThe problem:  \n**The \"Ultimate Guide\" Trap**: Trying to write a big, all-encompassing article leads to exhaustion and _burn-out_. You stop writing for months.\n\n### The Developer Content Creator Cycle\n\n1. Overwhelming to know what to create\n2. Difficult to cross things off the list (unfinished drafts)\n3. Never-ending cycle\n\n## Explorer's Mindset\n\n> Don't think of content (or any other skill you're building) as a dictionary to memorize.  \n> Instead: think like an explorer.\n\nThe secret lies in **Consistent Small Wins**.\n\n> Comfort is the enemy of growth.\n\n(But self-care, too!)\n\nSam does not encourage the \"hustle mindset\".\n\n## How to Grow\n\nDo _challenging_ things _quickly_ and _get feedback_.\n\nWhat?\n\n- production-focused (article, video)\n- trackable\n- measurable\n\nGetting feedback:\n\n- does it work?\n- learning in groups\n- learning in public\n\n## Building a Content System\n\n> Systems trump Motivation\n\nBuild a small but complete system.\n\n### 1. Draft\n- gathering notes\n- creating an outline\n- first draft\n\n### 2. Create\n- writing/recording\n- adding images\n- code samples\n\n### 3. Publish\n- publish on your site\n- adding social images\n- cross-posting\n\n### 4. Promote\n- Twitter threads\n- forums & chat groups\n- talks\n\n### 5. Garden\n- Update over time\n- maintain & correct\n- cross-link\n\n### Creation Phase (Step 1 to 3)\n\n#### Tools\n\n##### Scratch pad\n\nEliminate the distraction of figuring out where to jot something down.\n\nLook for: speed, ease of use, ability to export.\n\nGoogle Keep, Drafts app, etc.  \n\n##### Knowledge Base\n\nSlow burn your drafts and link your ideas together.\n\nLook for: cross-linking, collections, multimedia.\n\nEvernote, Obsidian, Roam, Notion.so, etc.\n\n##### Task Manager\n\nShip things faster by determining the next action and context for a project.\n\nLook for: works with your brain, ability to add context/tags\n\nOmniFocus, Google Keep, etc.\n\n#### Tips for Creating Content\n\n1. In the beginning, move fast to define your process (do tiny expirements).\n2. Start with what you know.\n3. Stuck? Try the TIL format.\n4. Don't over-engineer too quickly.\n\n#### TIL Format\n\n1. Intro: 2 or 3 sentences describing the problem.\n2. Body: describe the solution and how you got there.\n3. Final Solution: Finished code for copy&paste.\n4. Conclusion: 1 or 2 sentences re-capping the problem and solution.\n\n### Post-Publication Phase (Step 3 to 5)\n\n1. Every piece of content has a price tag (promotion & maintenance).\n2. Provide direct value on each platform (don't dump your stuff).\n3. Be patient.\n\n## Links\n\n- [The Counterintuitive Secret to Shipping Better Articles Faster - Sam Julien at Hashnode Bootcamp III][youtube]\n- [Talk Resources](https://www.samjulien.com/ship-better-articles-faster-talk)\n\n\n_image credit for the cover image: [Andy Li](https://unsplash.com/photos/CpsTAUPoScw)_\n\n[youtube]: https://www.youtube.com/watch?v=DIG8GGg-PXw\n[samjulien]: https://samjulien.com\n\n\n<hr />\n\nThank you for reading my blog.\n\nDon't hesitate to reach out via [email](mailto:hi@rockyourcode.com\") or [Twitter](https://twitter.com/hisophiabrandt)!\n"}